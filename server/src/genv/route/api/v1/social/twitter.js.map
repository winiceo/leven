{"version":3,"sources":["route/api/v1/social/twitter.js"],"names":[],"mappings":"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","file":"route/api/v1/social/twitter.js","sourcesContent":["var passport = require('passport');\nvar strategy = require('passport-twitter').Strategy;\nvar async    = require('async');\nvar dot      = require('dotty');\nvar _        = require('underscore');\n\nmodule.exports = function(app) {\n\n    var _env     = app.get('env');\n    var _mdl     = app.middle;\n    var _log     = app.lib.logger;\n    var _schema  = app.lib.schema;\n    var _conf    = app.config[_env].social;\n    var _emitter = app.lib.schemaEmitter;\n    var _group   = 'AUTH:SOCIAL:TWITTER';\n    \n    /**\n     * init passport twitter\n     */\n\n    _.each(_conf, function(value, key) {\n        var project = key;\n\n        if( ! value.twitter || ! value.twitter.enable )\n            return;\n\n        var twitter = value.twitter;\n\n        passport.use(new strategy({\n            consumerKey: twitter.key,\n            consumerSecret: twitter.secret,\n            callbackURL: twitter.callback,\n            passReqToCallback : true\n        },\n        function(req, token, tokenSecret, profile, done) {\n            var project = req.params.project;\n            _log.info(_group+':PROJECT', project);\n            _log.info(_group+':QS', req.query);\n            \n            new _schema('system.apps').init(app).get({\n                slug: project,\n                qt: 'one'\n            }, function(err, apps) {\n                if(err) {\n                    console.log(err);\n                    _log.info(_group, 'app not found');\n                    return done(null);                    \n                }\n\n                new _schema('system.accounts').init(app).get({\n                    apps: apps._id.toString(),\n                    user_id: parseInt(profile.id),\n                    qt: 'one'\n                }, function(err, account) {\n\n                    if(err) {\n                        console.log(err);\n                        if(err.name != 'NotFound')\n                            return done(null);                        \n                    }\n\n                    if( ! req.session.social )\n                        req.session.social = {};\n\n                    var profilePhoto = dot.get(profile, '_json.profile_image_url') || '';\n                    var location     = dot.get(profile, '_json.location') || '';\n                    \n                    var sessionObj   = {\n                        network_id: parseInt(profile.id),\n                        network_id_str: profile.id,\n                        user_name: profile.username || '',\n                        display_name: profile.displayName || '',\n                        profile_photo: profilePhoto,\n                        location: location,\n                        token: token,\n                        token_secret: tokenSecret\n                    };\n                            \n                    _log.info(_group+'SESSION_OBJ', sessionObj);\n                    \n                    if( ! account ) {\n                        new _schema('system.accounts').init(app).post({\n                            apps: apps._id.toString(),\n                            type: 'T',\n                            user_id: parseInt(profile.id),\n                            user_id_str: profile.id,\n                            user_name: profile.username || '',\n                            display_name: profile.displayName || '',\n                            profile_photo: profilePhoto,\n                            location: location,\n                            token: token,\n                            token_secret: tokenSecret,\n                        }, function(err, doc) {\n                            if(err) {\n                                console.log(err);\n                                return done(null);\n                            }\n\n                            sessionObj.account_id = doc._id.toString();\n                            req.session.social.twitter = sessionObj;\n                            _emitter.emit('twitter_connected', sessionObj);\n\n                            done(null, {twitter: {}});\n                        });\n                    }\n                    else {\n                        new _schema('system.accounts').init(app).put(account._id.toString(), {\n                            user_name: profile.username,\n                            display_name: profile.displayName,\n                            profile_photo: profilePhoto,\n                            location: location,\n                            token: token,\n                            token_secret: tokenSecret\n                        }, function(err, affected) {\n                            if(err)\n                                console.log(err);\n                            \n                            sessionObj.account_id = account._id.toString();\n                            req.session.social.twitter = sessionObj;\n                            _emitter.emit('twitter_connected', sessionObj);\n\n                            done(null, {twitter: {}});\n                        });\n                    }\n                });\n            });\n        }));\n\n        app.get('/api/:project/auth/twitter', passport.authenticate('twitter'));\n\n        app.get('/api/:project/twitter/callback', passport.authenticate('twitter', {\n            successRedirect: twitter.success,\n            failureRedirect: twitter.failure\n        }));\n\n    });\n\n};"],"sourceRoot":"/deploy/kevio/kevio/es6"}