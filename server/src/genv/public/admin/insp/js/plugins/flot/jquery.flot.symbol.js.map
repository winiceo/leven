{"version":3,"sources":["public/admin/insp/js/plugins/flot/jquery.flot.symbol.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeA,CAAC,UAAU,CAAV,EAAa;AACV,aAAS,cAAT,CAAwB,IAAxB,EAA8B,MAA9B,EAAsC,UAAtC,EAAkD;AAC9C;AACA;;AAEA,YAAI,WAAW;AACX,oBAAQ,UAAU,GAAV,EAAe,CAAf,EAAkB,CAAlB,EAAqB,MAArB,EAA6B,MAA7B,EAAqC;AACzC;AACA,oBAAI,OAAO,SAAS,KAAK,IAAL,CAAU,KAAK,EAAf,CAAT,GAA8B,CAAzC;AACA,oBAAI,IAAJ,CAAS,IAAI,IAAb,EAAmB,IAAI,IAAvB,EAA6B,OAAO,IAApC,EAA0C,OAAO,IAAjD;AACH,aALU;AAMX,qBAAS,UAAU,GAAV,EAAe,CAAf,EAAkB,CAAlB,EAAqB,MAArB,EAA6B,MAA7B,EAAqC;AAC1C;AACA,oBAAI,OAAO,SAAS,KAAK,IAAL,CAAU,KAAK,EAAL,GAAU,CAApB,CAApB;AACA,oBAAI,MAAJ,CAAW,IAAI,IAAf,EAAqB,CAArB;AACA,oBAAI,MAAJ,CAAW,CAAX,EAAc,IAAI,IAAlB;AACA,oBAAI,MAAJ,CAAW,IAAI,IAAf,EAAqB,CAArB;AACA,oBAAI,MAAJ,CAAW,CAAX,EAAc,IAAI,IAAlB;AACA,oBAAI,MAAJ,CAAW,IAAI,IAAf,EAAqB,CAArB;AACH,aAdU;AAeX,sBAAU,UAAU,GAAV,EAAe,CAAf,EAAkB,CAAlB,EAAqB,MAArB,EAA6B,MAA7B,EAAqC;AAC3C;AACA,oBAAI,OAAO,SAAS,KAAK,IAAL,CAAU,IAAI,KAAK,EAAT,GAAc,KAAK,GAAL,CAAS,KAAK,EAAL,GAAU,CAAnB,CAAxB,CAApB;AACA,oBAAI,SAAS,OAAO,KAAK,GAAL,CAAS,KAAK,EAAL,GAAU,CAAnB,CAApB;AACA,oBAAI,MAAJ,CAAW,IAAI,OAAK,CAApB,EAAuB,IAAI,SAAO,CAAlC;AACA,oBAAI,MAAJ,CAAW,IAAI,OAAK,CAApB,EAAuB,IAAI,SAAO,CAAlC;AACA,oBAAI,CAAC,MAAL,EAAa;AACT,wBAAI,MAAJ,CAAW,CAAX,EAAc,IAAI,SAAO,CAAzB;AACA,wBAAI,MAAJ,CAAW,IAAI,OAAK,CAApB,EAAuB,IAAI,SAAO,CAAlC;AACH;AACJ,aAzBU;AA0BX,mBAAO,UAAU,GAAV,EAAe,CAAf,EAAkB,CAAlB,EAAqB,MAArB,EAA6B,MAA7B,EAAqC;AACxC;AACA,oBAAI,OAAO,SAAS,KAAK,IAAL,CAAU,KAAK,EAAf,CAAT,GAA8B,CAAzC;AACA,oBAAI,MAAJ,CAAW,IAAI,IAAf,EAAqB,IAAI,IAAzB;AACA,oBAAI,MAAJ,CAAW,IAAI,IAAf,EAAqB,IAAI,IAAzB;AACA,oBAAI,MAAJ,CAAW,IAAI,IAAf,EAAqB,IAAI,IAAzB;AACA,oBAAI,MAAJ,CAAW,IAAI,IAAf,EAAqB,IAAI,IAAzB;AACH;AAjCU,SAAf;;AAoCA,YAAI,IAAI,OAAO,MAAP,CAAc,MAAtB;AACA,YAAI,SAAS,CAAT,CAAJ,EACI,OAAO,MAAP,CAAc,MAAd,GAAuB,SAAS,CAAT,CAAvB;AACP;;AAED,aAAS,IAAT,CAAc,IAAd,EAAoB;AAChB,aAAK,KAAL,CAAW,iBAAX,CAA6B,IAA7B,CAAkC,cAAlC;AACH;;AAED,MAAE,IAAF,CAAO,OAAP,CAAe,IAAf,CAAoB;AAChB,cAAM,IADU;AAEhB,cAAM,SAFU;AAGhB,iBAAS;AAHO,KAApB;AAKH,CAvDD,EAuDG,MAvDH","file":"public/admin/insp/js/plugins/flot/jquery.flot.symbol.js","sourcesContent":["/* Flot plugin that adds some extra symbols for plotting points.\n\n Copyright (c) 2007-2014 IOLA and Ole Laursen.\n Licensed under the MIT license.\n\n The symbols are accessed as strings through the standard symbol options:\n\n series: {\n points: {\n symbol: \"square\" // or \"diamond\", \"triangle\", \"cross\"\n }\n }\n\n */\n\n(function ($) {\n    function processRawData(plot, series, datapoints) {\n        // we normalize the area of each symbol so it is approximately the\n        // same as a circle of the given radius\n\n        var handlers = {\n            square: function (ctx, x, y, radius, shadow) {\n                // pi * r^2 = (2s)^2  =>  s = r * sqrt(pi)/2\n                var size = radius * Math.sqrt(Math.PI) / 2;\n                ctx.rect(x - size, y - size, size + size, size + size);\n            },\n            diamond: function (ctx, x, y, radius, shadow) {\n                // pi * r^2 = 2s^2  =>  s = r * sqrt(pi/2)\n                var size = radius * Math.sqrt(Math.PI / 2);\n                ctx.moveTo(x - size, y);\n                ctx.lineTo(x, y - size);\n                ctx.lineTo(x + size, y);\n                ctx.lineTo(x, y + size);\n                ctx.lineTo(x - size, y);\n            },\n            triangle: function (ctx, x, y, radius, shadow) {\n                // pi * r^2 = 1/2 * s^2 * sin (pi / 3)  =>  s = r * sqrt(2 * pi / sin(pi / 3))\n                var size = radius * Math.sqrt(2 * Math.PI / Math.sin(Math.PI / 3));\n                var height = size * Math.sin(Math.PI / 3);\n                ctx.moveTo(x - size/2, y + height/2);\n                ctx.lineTo(x + size/2, y + height/2);\n                if (!shadow) {\n                    ctx.lineTo(x, y - height/2);\n                    ctx.lineTo(x - size/2, y + height/2);\n                }\n            },\n            cross: function (ctx, x, y, radius, shadow) {\n                // pi * r^2 = (2s)^2  =>  s = r * sqrt(pi)/2\n                var size = radius * Math.sqrt(Math.PI) / 2;\n                ctx.moveTo(x - size, y - size);\n                ctx.lineTo(x + size, y + size);\n                ctx.moveTo(x - size, y + size);\n                ctx.lineTo(x + size, y - size);\n            }\n        };\n\n        var s = series.points.symbol;\n        if (handlers[s])\n            series.points.symbol = handlers[s];\n    }\n\n    function init(plot) {\n        plot.hooks.processDatapoints.push(processRawData);\n    }\n\n    $.plot.plugins.push({\n        init: init,\n        name: 'symbols',\n        version: '1.0'\n    });\n})(jQuery);\n"],"sourceRoot":"/deploy/kevio/kevio/es6"}