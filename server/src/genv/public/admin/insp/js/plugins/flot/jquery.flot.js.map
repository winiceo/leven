{"version":3,"sources":["public/admin/insp/js/plugins/flot/jquery.flot.js"],"names":[],"mappings":"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","file":"public/admin/insp/js/plugins/flot/jquery.flot.js","sourcesContent":["/*! Javascript plotting library for jQuery, v. 0.7.\n *\n * Released under the MIT license by IOLA, December 2007.\n *\n */\n\n// first an inline dependency, jquery.colorhelpers.js, we inline it here\n// for convenience\n\n/* Plugin for jQuery for working with colors.\n * \n * Version 1.1.\n * \n * Inspiration from jQuery color animation plugin by John Resig.\n *\n * Released under the MIT license by Ole Laursen, October 2009.\n *\n * Examples:\n *\n *   $.color.parse(\"#fff\").scale('rgb', 0.25).add('a', -0.5).toString()\n *   var c = $.color.extract($(\"#mydiv\"), 'background-color');\n *   console.log(c.r, c.g, c.b, c.a);\n *   $.color.make(100, 50, 25, 0.4).toString() // returns \"rgba(100,50,25,0.4)\"\n *\n * Note that .scale() and .add() return the same modified object\n * instead of making a new one.\n *\n * V. 1.1: Fix error handling so e.g. parsing an empty string does\n * produce a color rather than just crashing.\n */ \n(function(B){B.color={};B.color.make=function(F,E,C,D){var G={};G.r=F||0;G.g=E||0;G.b=C||0;G.a=D!=null?D:1;G.add=function(J,I){for(var H=0;H<J.length;++H){G[J.charAt(H)]+=I}return G.normalize()};G.scale=function(J,I){for(var H=0;H<J.length;++H){G[J.charAt(H)]*=I}return G.normalize()};G.toString=function(){if(G.a>=1){return\"rgb(\"+[G.r,G.g,G.b].join(\",\")+\")\"}else{return\"rgba(\"+[G.r,G.g,G.b,G.a].join(\",\")+\")\"}};G.normalize=function(){function H(J,K,I){return K<J?J:(K>I?I:K)}G.r=H(0,parseInt(G.r),255);G.g=H(0,parseInt(G.g),255);G.b=H(0,parseInt(G.b),255);G.a=H(0,G.a,1);return G};G.clone=function(){return B.color.make(G.r,G.b,G.g,G.a)};return G.normalize()};B.color.extract=function(D,C){var E;do{E=D.css(C).toLowerCase();if(E!=\"\"&&E!=\"transparent\"){break}D=D.parent()}while(!B.nodeName(D.get(0),\"body\"));if(E==\"rgba(0, 0, 0, 0)\"){E=\"transparent\"}return B.color.parse(E)};B.color.parse=function(F){var E,C=B.color.make;if(E=/rgb\\(\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*\\)/.exec(F)){return C(parseInt(E[1],10),parseInt(E[2],10),parseInt(E[3],10))}if(E=/rgba\\(\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\s*\\)/.exec(F)){return C(parseInt(E[1],10),parseInt(E[2],10),parseInt(E[3],10),parseFloat(E[4]))}if(E=/rgb\\(\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*\\)/.exec(F)){return C(parseFloat(E[1])*2.55,parseFloat(E[2])*2.55,parseFloat(E[3])*2.55)}if(E=/rgba\\(\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\s*\\)/.exec(F)){return C(parseFloat(E[1])*2.55,parseFloat(E[2])*2.55,parseFloat(E[3])*2.55,parseFloat(E[4]))}if(E=/#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(F)){return C(parseInt(E[1],16),parseInt(E[2],16),parseInt(E[3],16))}if(E=/#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec(F)){return C(parseInt(E[1]+E[1],16),parseInt(E[2]+E[2],16),parseInt(E[3]+E[3],16))}var D=B.trim(F).toLowerCase();if(D==\"transparent\"){return C(255,255,255,0)}else{E=A[D]||[0,0,0];return C(E[0],E[1],E[2])}};var A={aqua:[0,255,255],azure:[240,255,255],beige:[245,245,220],black:[0,0,0],blue:[0,0,255],brown:[165,42,42],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgrey:[169,169,169],darkgreen:[0,100,0],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkviolet:[148,0,211],fuchsia:[255,0,255],gold:[255,215,0],green:[0,128,0],indigo:[75,0,130],khaki:[240,230,140],lightblue:[173,216,230],lightcyan:[224,255,255],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightyellow:[255,255,224],lime:[0,255,0],magenta:[255,0,255],maroon:[128,0,0],navy:[0,0,128],olive:[128,128,0],orange:[255,165,0],pink:[255,192,203],purple:[128,0,128],violet:[128,0,128],red:[255,0,0],silver:[192,192,192],white:[255,255,255],yellow:[255,255,0]}})(jQuery);\n\n// the actual Flot code\n(function($) {\n    function Plot(placeholder, data_, options_, plugins) {\n        // data is on the form:\n        //   [ series1, series2 ... ]\n        // where series is either just the data as [ [x1, y1], [x2, y2], ... ]\n        // or { data: [ [x1, y1], [x2, y2], ... ], label: \"some label\", ... }\n        \n        var series = [],\n            options = {\n                // the color theme used for graphs\n                colors: [\"#edc240\", \"#afd8f8\", \"#cb4b4b\", \"#4da74d\", \"#9440ed\"],\n                legend: {\n                    show: true,\n                    noColumns: 1, // number of colums in legend table\n                    labelFormatter: null, // fn: string -> string\n                    labelBoxBorderColor: \"#ccc\", // border color for the little label boxes\n                    container: null, // container (as jQuery object) to put legend in, null means default on top of graph\n                    position: \"ne\", // position of default legend container within plot\n                    margin: 5, // distance from grid edge to default legend container within plot\n                    backgroundColor: null, // null means auto-detect\n                    backgroundOpacity: 0.85 // set to 0 to avoid background\n                },\n                xaxis: {\n                    show: null, // null = auto-detect, true = always, false = never\n                    position: \"bottom\", // or \"top\"\n                    mode: null, // null or \"time\"\n                    color: null, // base color, labels, ticks\n                    tickColor: null, // possibly different color of ticks, e.g. \"rgba(0,0,0,0.15)\"\n                    transform: null, // null or f: number -> number to transform axis\n                    inverseTransform: null, // if transform is set, this should be the inverse function\n                    min: null, // min. value to show, null means set automatically\n                    max: null, // max. value to show, null means set automatically\n                    autoscaleMargin: null, // margin in % to add if auto-setting min/max\n                    ticks: null, // either [1, 3] or [[1, \"a\"], 3] or (fn: axis info -> ticks) or app. number of ticks for auto-ticks\n                    tickFormatter: null, // fn: number -> string\n                    labelWidth: null, // size of tick labels in pixels\n                    labelHeight: null,\n                    reserveSpace: null, // whether to reserve space even if axis isn't shown\n                    tickLength: null, // size in pixels of ticks, or \"full\" for whole line\n                    alignTicksWithAxis: null, // axis number or null for no sync\n                    \n                    // mode specific options\n                    tickDecimals: null, // no. of decimals, null means auto\n                    tickSize: null, // number or [number, \"unit\"]\n                    minTickSize: null, // number or [number, \"unit\"]\n                    monthNames: null, // list of names of months\n                    timeformat: null, // format string to use\n                    twelveHourClock: false // 12 or 24 time in time mode\n                },\n                yaxis: {\n                    autoscaleMargin: 0.02,\n                    position: \"left\" // or \"right\"\n                },\n                xaxes: [],\n                yaxes: [],\n                series: {\n                    points: {\n                        show: false,\n                        radius: 3,\n                        lineWidth: 2, // in pixels\n                        fill: true,\n                        fillColor: \"#ffffff\",\n                        symbol: \"circle\" // or callback\n                    },\n                    lines: {\n                        // we don't put in show: false so we can see\n                        // whether lines were actively disabled \n                        lineWidth: 2, // in pixels\n                        fill: false,\n                        fillColor: null,\n                        steps: false\n                    },\n                    bars: {\n                        show: false,\n                        lineWidth: 2, // in pixels\n                        barWidth: 1, // in units of the x axis\n                        fill: true,\n                        fillColor: null,\n                        align: \"left\", // or \"center\" \n                        horizontal: false\n                    },\n                    shadowSize: 3\n                },\n                grid: {\n                    show: true,\n                    aboveData: false,\n                    color: \"#545454\", // primary color used for outline and labels\n                    backgroundColor: null, // null for transparent, else color\n                    borderColor: null, // set if different from the grid color\n                    tickColor: null, // color for the ticks, e.g. \"rgba(0,0,0,0.15)\"\n                    labelMargin: 5, // in pixels\n                    axisMargin: 8, // in pixels\n                    borderWidth: 2, // in pixels\n                    minBorderMargin: null, // in pixels, null means taken from points radius\n                    markings: null, // array of ranges or fn: axes -> array of ranges\n                    markingsColor: \"#f4f4f4\",\n                    markingsLineWidth: 2,\n                    // interactive stuff\n                    clickable: false,\n                    hoverable: false,\n                    autoHighlight: true, // highlight in case mouse is near\n                    mouseActiveRadius: 10 // how far the mouse can be away to activate an item\n                },\n                hooks: {}\n            },\n        canvas = null,      // the canvas for the plot itself\n        overlay = null,     // canvas for interactive stuff on top of plot\n        eventHolder = null, // jQuery object that events should be bound to\n        ctx = null, octx = null,\n        xaxes = [], yaxes = [],\n        plotOffset = { left: 0, right: 0, top: 0, bottom: 0},\n        canvasWidth = 0, canvasHeight = 0,\n        plotWidth = 0, plotHeight = 0,\n        hooks = {\n            processOptions: [],\n            processRawData: [],\n            processDatapoints: [],\n            drawSeries: [],\n            draw: [],\n            bindEvents: [],\n            drawOverlay: [],\n            shutdown: []\n        },\n        plot = this;\n\n        // public functions\n        plot.setData = setData;\n        plot.setupGrid = setupGrid;\n        plot.draw = draw;\n        plot.getPlaceholder = function() { return placeholder; };\n        plot.getCanvas = function() { return canvas; };\n        plot.getPlotOffset = function() { return plotOffset; };\n        plot.width = function () { return plotWidth; };\n        plot.height = function () { return plotHeight; };\n        plot.offset = function () {\n            var o = eventHolder.offset();\n            o.left += plotOffset.left;\n            o.top += plotOffset.top;\n            return o;\n        };\n        plot.getData = function () { return series; };\n        plot.getAxes = function () {\n            var res = {}, i;\n            $.each(xaxes.concat(yaxes), function (_, axis) {\n                if (axis)\n                    res[axis.direction + (axis.n != 1 ? axis.n : \"\") + \"axis\"] = axis;\n            });\n            return res;\n        };\n        plot.getXAxes = function () { return xaxes; };\n        plot.getYAxes = function () { return yaxes; };\n        plot.c2p = canvasToAxisCoords;\n        plot.p2c = axisToCanvasCoords;\n        plot.getOptions = function () { return options; };\n        plot.highlight = highlight;\n        plot.unhighlight = unhighlight;\n        plot.triggerRedrawOverlay = triggerRedrawOverlay;\n        plot.pointOffset = function(point) {\n            return {\n                left: parseInt(xaxes[axisNumber(point, \"x\") - 1].p2c(+point.x) + plotOffset.left),\n                top: parseInt(yaxes[axisNumber(point, \"y\") - 1].p2c(+point.y) + plotOffset.top)\n            };\n        };\n        plot.shutdown = shutdown;\n        plot.resize = function () {\n            getCanvasDimensions();\n            resizeCanvas(canvas);\n            resizeCanvas(overlay);\n        };\n\n        // public attributes\n        plot.hooks = hooks;\n        \n        // initialize\n        initPlugins(plot);\n        parseOptions(options_);\n        setupCanvases();\n        setData(data_);\n        setupGrid();\n        draw();\n        bindEvents();\n\n\n        function executeHooks(hook, args) {\n            args = [plot].concat(args);\n            for (var i = 0; i < hook.length; ++i)\n                hook[i].apply(this, args);\n        }\n\n        function initPlugins() {\n            for (var i = 0; i < plugins.length; ++i) {\n                var p = plugins[i];\n                p.init(plot);\n                if (p.options)\n                    $.extend(true, options, p.options);\n            }\n        }\n        \n        function parseOptions(opts) {\n            var i;\n            \n            $.extend(true, options, opts);\n            \n            if (options.xaxis.color == null)\n                options.xaxis.color = options.grid.color;\n            if (options.yaxis.color == null)\n                options.yaxis.color = options.grid.color;\n            \n            if (options.xaxis.tickColor == null) // backwards-compatibility\n                options.xaxis.tickColor = options.grid.tickColor;\n            if (options.yaxis.tickColor == null) // backwards-compatibility\n                options.yaxis.tickColor = options.grid.tickColor;\n\n            if (options.grid.borderColor == null)\n                options.grid.borderColor = options.grid.color;\n            if (options.grid.tickColor == null)\n                options.grid.tickColor = $.color.parse(options.grid.color).scale('a', 0.22).toString();\n            \n            // fill in defaults in axes, copy at least always the\n            // first as the rest of the code assumes it'll be there\n            for (i = 0; i < Math.max(1, options.xaxes.length); ++i)\n                options.xaxes[i] = $.extend(true, {}, options.xaxis, options.xaxes[i]);\n            for (i = 0; i < Math.max(1, options.yaxes.length); ++i)\n                options.yaxes[i] = $.extend(true, {}, options.yaxis, options.yaxes[i]);\n\n            // backwards compatibility, to be removed in future\n            if (options.xaxis.noTicks && options.xaxis.ticks == null)\n                options.xaxis.ticks = options.xaxis.noTicks;\n            if (options.yaxis.noTicks && options.yaxis.ticks == null)\n                options.yaxis.ticks = options.yaxis.noTicks;\n            if (options.x2axis) {\n                options.xaxes[1] = $.extend(true, {}, options.xaxis, options.x2axis);\n                options.xaxes[1].position = \"top\";\n            }\n            if (options.y2axis) {\n                options.yaxes[1] = $.extend(true, {}, options.yaxis, options.y2axis);\n                options.yaxes[1].position = \"right\";\n            }\n            if (options.grid.coloredAreas)\n                options.grid.markings = options.grid.coloredAreas;\n            if (options.grid.coloredAreasColor)\n                options.grid.markingsColor = options.grid.coloredAreasColor;\n            if (options.lines)\n                $.extend(true, options.series.lines, options.lines);\n            if (options.points)\n                $.extend(true, options.series.points, options.points);\n            if (options.bars)\n                $.extend(true, options.series.bars, options.bars);\n            if (options.shadowSize != null)\n                options.series.shadowSize = options.shadowSize;\n\n            // save options on axes for future reference\n            for (i = 0; i < options.xaxes.length; ++i)\n                getOrCreateAxis(xaxes, i + 1).options = options.xaxes[i];\n            for (i = 0; i < options.yaxes.length; ++i)\n                getOrCreateAxis(yaxes, i + 1).options = options.yaxes[i];\n\n            // add hooks from options\n            for (var n in hooks)\n                if (options.hooks[n] && options.hooks[n].length)\n                    hooks[n] = hooks[n].concat(options.hooks[n]);\n\n            executeHooks(hooks.processOptions, [options]);\n        }\n\n        function setData(d) {\n            series = parseData(d);\n            fillInSeriesOptions();\n            processData();\n        }\n        \n        function parseData(d) {\n            var res = [];\n            for (var i = 0; i < d.length; ++i) {\n                var s = $.extend(true, {}, options.series);\n\n                if (d[i].data != null) {\n                    s.data = d[i].data; // move the data instead of deep-copy\n                    delete d[i].data;\n\n                    $.extend(true, s, d[i]);\n\n                    d[i].data = s.data;\n                }\n                else\n                    s.data = d[i];\n                res.push(s);\n            }\n\n            return res;\n        }\n        \n        function axisNumber(obj, coord) {\n            var a = obj[coord + \"axis\"];\n            if (typeof a == \"object\") // if we got a real axis, extract number\n                a = a.n;\n            if (typeof a != \"number\")\n                a = 1; // default to first axis\n            return a;\n        }\n\n        function allAxes() {\n            // return flat array without annoying null entries\n            return $.grep(xaxes.concat(yaxes), function (a) { return a; });\n        }\n        \n        function canvasToAxisCoords(pos) {\n            // return an object with x/y corresponding to all used axes \n            var res = {}, i, axis;\n            for (i = 0; i < xaxes.length; ++i) {\n                axis = xaxes[i];\n                if (axis && axis.used)\n                    res[\"x\" + axis.n] = axis.c2p(pos.left);\n            }\n\n            for (i = 0; i < yaxes.length; ++i) {\n                axis = yaxes[i];\n                if (axis && axis.used)\n                    res[\"y\" + axis.n] = axis.c2p(pos.top);\n            }\n            \n            if (res.x1 !== undefined)\n                res.x = res.x1;\n            if (res.y1 !== undefined)\n                res.y = res.y1;\n\n            return res;\n        }\n        \n        function axisToCanvasCoords(pos) {\n            // get canvas coords from the first pair of x/y found in pos\n            var res = {}, i, axis, key;\n\n            for (i = 0; i < xaxes.length; ++i) {\n                axis = xaxes[i];\n                if (axis && axis.used) {\n                    key = \"x\" + axis.n;\n                    if (pos[key] == null && axis.n == 1)\n                        key = \"x\";\n\n                    if (pos[key] != null) {\n                        res.left = axis.p2c(pos[key]);\n                        break;\n                    }\n                }\n            }\n            \n            for (i = 0; i < yaxes.length; ++i) {\n                axis = yaxes[i];\n                if (axis && axis.used) {\n                    key = \"y\" + axis.n;\n                    if (pos[key] == null && axis.n == 1)\n                        key = \"y\";\n\n                    if (pos[key] != null) {\n                        res.top = axis.p2c(pos[key]);\n                        break;\n                    }\n                }\n            }\n            \n            return res;\n        }\n        \n        function getOrCreateAxis(axes, number) {\n            if (!axes[number - 1])\n                axes[number - 1] = {\n                    n: number, // save the number for future reference\n                    direction: axes == xaxes ? \"x\" : \"y\",\n                    options: $.extend(true, {}, axes == xaxes ? options.xaxis : options.yaxis)\n                };\n                \n            return axes[number - 1];\n        }\n\n        function fillInSeriesOptions() {\n            var i;\n            \n            // collect what we already got of colors\n            var neededColors = series.length,\n                usedColors = [],\n                assignedColors = [];\n            for (i = 0; i < series.length; ++i) {\n                var sc = series[i].color;\n                if (sc != null) {\n                    --neededColors;\n                    if (typeof sc == \"number\")\n                        assignedColors.push(sc);\n                    else\n                        usedColors.push($.color.parse(series[i].color));\n                }\n            }\n            \n            // we might need to generate more colors if higher indices\n            // are assigned\n            for (i = 0; i < assignedColors.length; ++i) {\n                neededColors = Math.max(neededColors, assignedColors[i] + 1);\n            }\n\n            // produce colors as needed\n            var colors = [], variation = 0;\n            i = 0;\n            while (colors.length < neededColors) {\n                var c;\n                if (options.colors.length == i) // check degenerate case\n                    c = $.color.make(100, 100, 100);\n                else\n                    c = $.color.parse(options.colors[i]);\n\n                // vary color if needed\n                var sign = variation % 2 == 1 ? -1 : 1;\n                c.scale('rgb', 1 + sign * Math.ceil(variation / 2) * 0.2)\n\n                // FIXME: if we're getting to close to something else,\n                // we should probably skip this one\n                colors.push(c);\n                \n                ++i;\n                if (i >= options.colors.length) {\n                    i = 0;\n                    ++variation;\n                }\n            }\n\n            // fill in the options\n            var colori = 0, s;\n            for (i = 0; i < series.length; ++i) {\n                s = series[i];\n                \n                // assign colors\n                if (s.color == null) {\n                    s.color = colors[colori].toString();\n                    ++colori;\n                }\n                else if (typeof s.color == \"number\")\n                    s.color = colors[s.color].toString();\n\n                // turn on lines automatically in case nothing is set\n                if (s.lines.show == null) {\n                    var v, show = true;\n                    for (v in s)\n                        if (s[v] && s[v].show) {\n                            show = false;\n                            break;\n                        }\n                    if (show)\n                        s.lines.show = true;\n                }\n\n                // setup axes\n                s.xaxis = getOrCreateAxis(xaxes, axisNumber(s, \"x\"));\n                s.yaxis = getOrCreateAxis(yaxes, axisNumber(s, \"y\"));\n            }\n        }\n        \n        function processData() {\n            var topSentry = Number.POSITIVE_INFINITY,\n                bottomSentry = Number.NEGATIVE_INFINITY,\n                fakeInfinity = Number.MAX_VALUE,\n                i, j, k, m, length,\n                s, points, ps, x, y, axis, val, f, p;\n\n            function updateAxis(axis, min, max) {\n                if (min < axis.datamin && min != -fakeInfinity)\n                    axis.datamin = min;\n                if (max > axis.datamax && max != fakeInfinity)\n                    axis.datamax = max;\n            }\n\n            $.each(allAxes(), function (_, axis) {\n                // init axis\n                axis.datamin = topSentry;\n                axis.datamax = bottomSentry;\n                axis.used = false;\n            });\n            \n            for (i = 0; i < series.length; ++i) {\n                s = series[i];\n                s.datapoints = { points: [] };\n                \n                executeHooks(hooks.processRawData, [ s, s.data, s.datapoints ]);\n            }\n            \n            // first pass: clean and copy data\n            for (i = 0; i < series.length; ++i) {\n                s = series[i];\n\n                var data = s.data, format = s.datapoints.format;\n\n                if (!format) {\n                    format = [];\n                    // find out how to copy\n                    format.push({ x: true, number: true, required: true });\n                    format.push({ y: true, number: true, required: true });\n\n                    if (s.bars.show || (s.lines.show && s.lines.fill)) {\n                        format.push({ y: true, number: true, required: false, defaultValue: 0 });\n                        if (s.bars.horizontal) {\n                            delete format[format.length - 1].y;\n                            format[format.length - 1].x = true;\n                        }\n                    }\n                    \n                    s.datapoints.format = format;\n                }\n\n                if (s.datapoints.pointsize != null)\n                    continue; // already filled in\n\n                s.datapoints.pointsize = format.length;\n                \n                ps = s.datapoints.pointsize;\n                points = s.datapoints.points;\n\n                insertSteps = s.lines.show && s.lines.steps;\n                s.xaxis.used = s.yaxis.used = true;\n                \n                for (j = k = 0; j < data.length; ++j, k += ps) {\n                    p = data[j];\n\n                    var nullify = p == null;\n                    if (!nullify) {\n                        for (m = 0; m < ps; ++m) {\n                            val = p[m];\n                            f = format[m];\n\n                            if (f) {\n                                if (f.number && val != null) {\n                                    val = +val; // convert to number\n                                    if (isNaN(val))\n                                        val = null;\n                                    else if (val == Infinity)\n                                        val = fakeInfinity;\n                                    else if (val == -Infinity)\n                                        val = -fakeInfinity;\n                                }\n\n                                if (val == null) {\n                                    if (f.required)\n                                        nullify = true;\n                                    \n                                    if (f.defaultValue != null)\n                                        val = f.defaultValue;\n                                }\n                            }\n                            \n                            points[k + m] = val;\n                        }\n                    }\n                    \n                    if (nullify) {\n                        for (m = 0; m < ps; ++m) {\n                            val = points[k + m];\n                            if (val != null) {\n                                f = format[m];\n                                // extract min/max info\n                                if (f.x)\n                                    updateAxis(s.xaxis, val, val);\n                                if (f.y)\n                                    updateAxis(s.yaxis, val, val);\n                            }\n                            points[k + m] = null;\n                        }\n                    }\n                    else {\n                        // a little bit of line specific stuff that\n                        // perhaps shouldn't be here, but lacking\n                        // better means...\n                        if (insertSteps && k > 0\n                            && points[k - ps] != null\n                            && points[k - ps] != points[k]\n                            && points[k - ps + 1] != points[k + 1]) {\n                            // copy the point to make room for a middle point\n                            for (m = 0; m < ps; ++m)\n                                points[k + ps + m] = points[k + m];\n\n                            // middle point has same y\n                            points[k + 1] = points[k - ps + 1];\n\n                            // we've added a point, better reflect that\n                            k += ps;\n                        }\n                    }\n                }\n            }\n\n            // give the hooks a chance to run\n            for (i = 0; i < series.length; ++i) {\n                s = series[i];\n                \n                executeHooks(hooks.processDatapoints, [ s, s.datapoints]);\n            }\n\n            // second pass: find datamax/datamin for auto-scaling\n            for (i = 0; i < series.length; ++i) {\n                s = series[i];\n                points = s.datapoints.points,\n                ps = s.datapoints.pointsize;\n\n                var xmin = topSentry, ymin = topSentry,\n                    xmax = bottomSentry, ymax = bottomSentry;\n                \n                for (j = 0; j < points.length; j += ps) {\n                    if (points[j] == null)\n                        continue;\n\n                    for (m = 0; m < ps; ++m) {\n                        val = points[j + m];\n                        f = format[m];\n                        if (!f || val == fakeInfinity || val == -fakeInfinity)\n                            continue;\n                        \n                        if (f.x) {\n                            if (val < xmin)\n                                xmin = val;\n                            if (val > xmax)\n                                xmax = val;\n                        }\n                        if (f.y) {\n                            if (val < ymin)\n                                ymin = val;\n                            if (val > ymax)\n                                ymax = val;\n                        }\n                    }\n                }\n                \n                if (s.bars.show) {\n                    // make sure we got room for the bar on the dancing floor\n                    var delta = s.bars.align == \"left\" ? 0 : -s.bars.barWidth/2;\n                    if (s.bars.horizontal) {\n                        ymin += delta;\n                        ymax += delta + s.bars.barWidth;\n                    }\n                    else {\n                        xmin += delta;\n                        xmax += delta + s.bars.barWidth;\n                    }\n                }\n                \n                updateAxis(s.xaxis, xmin, xmax);\n                updateAxis(s.yaxis, ymin, ymax);\n            }\n\n            $.each(allAxes(), function (_, axis) {\n                if (axis.datamin == topSentry)\n                    axis.datamin = null;\n                if (axis.datamax == bottomSentry)\n                    axis.datamax = null;\n            });\n        }\n\n        function makeCanvas(skipPositioning, cls) {\n            var c = document.createElement('canvas');\n            c.className = cls;\n            c.width = canvasWidth;\n            c.height = canvasHeight;\n                    \n            if (!skipPositioning)\n                $(c).css({ position: 'absolute', left: 0, top: 0 });\n                \n            $(c).appendTo(placeholder);\n                \n            if (!c.getContext) // excanvas hack\n                c = window.G_vmlCanvasManager.initElement(c);\n\n            // used for resetting in case we get replotted\n            c.getContext(\"2d\").save();\n            \n            return c;\n        }\n\n        function getCanvasDimensions() {\n            canvasWidth = placeholder.width();\n            canvasHeight = placeholder.height();\n            \n            if (canvasWidth <= 0 || canvasHeight <= 0)\n                throw \"Invalid dimensions for plot, width = \" + canvasWidth + \", height = \" + canvasHeight;\n        }\n\n        function resizeCanvas(c) {\n            // resizing should reset the state (excanvas seems to be\n            // buggy though)\n            if (c.width != canvasWidth)\n                c.width = canvasWidth;\n\n            if (c.height != canvasHeight)\n                c.height = canvasHeight;\n\n            // so try to get back to the initial state (even if it's\n            // gone now, this should be safe according to the spec)\n            var cctx = c.getContext(\"2d\");\n            cctx.restore();\n\n            // and save again\n            cctx.save();\n        }\n        \n        function setupCanvases() {\n            var reused,\n                existingCanvas = placeholder.children(\"canvas.base\"),\n                existingOverlay = placeholder.children(\"canvas.overlay\");\n\n            if (existingCanvas.length == 0 || existingOverlay == 0) {\n                // init everything\n                \n                placeholder.html(\"\"); // make sure placeholder is clear\n            \n                placeholder.css({ padding: 0 }); // padding messes up the positioning\n                \n                if (placeholder.css(\"position\") == 'static')\n                    placeholder.css(\"position\", \"relative\"); // for positioning labels and overlay\n\n                getCanvasDimensions();\n                \n                canvas = makeCanvas(true, \"base\");\n                overlay = makeCanvas(false, \"overlay\"); // overlay canvas for interactive features\n\n                reused = false;\n            }\n            else {\n                // reuse existing elements\n\n                canvas = existingCanvas.get(0);\n                overlay = existingOverlay.get(0);\n\n                reused = true;\n            }\n\n            ctx = canvas.getContext(\"2d\");\n            octx = overlay.getContext(\"2d\");\n\n            // we include the canvas in the event holder too, because IE 7\n            // sometimes has trouble with the stacking order\n            eventHolder = $([overlay, canvas]);\n\n            if (reused) {\n                // run shutdown in the old plot object\n                placeholder.data(\"plot\").shutdown();\n\n                // reset reused canvases\n                plot.resize();\n                \n                // make sure overlay pixels are cleared (canvas is cleared when we redraw)\n                octx.clearRect(0, 0, canvasWidth, canvasHeight);\n                \n                // then whack any remaining obvious garbage left\n                eventHolder.unbind();\n                placeholder.children().not([canvas, overlay]).remove();\n            }\n\n            // save in case we get replotted\n            placeholder.data(\"plot\", plot);\n        }\n\n        function bindEvents() {\n            // bind events\n            if (options.grid.hoverable) {\n                eventHolder.mousemove(onMouseMove);\n                eventHolder.mouseleave(onMouseLeave);\n            }\n\n            if (options.grid.clickable)\n                eventHolder.click(onClick);\n\n            executeHooks(hooks.bindEvents, [eventHolder]);\n        }\n\n        function shutdown() {\n            if (redrawTimeout)\n                clearTimeout(redrawTimeout);\n            \n            eventHolder.unbind(\"mousemove\", onMouseMove);\n            eventHolder.unbind(\"mouseleave\", onMouseLeave);\n            eventHolder.unbind(\"click\", onClick);\n            \n            executeHooks(hooks.shutdown, [eventHolder]);\n        }\n\n        function setTransformationHelpers(axis) {\n            // set helper functions on the axis, assumes plot area\n            // has been computed already\n            \n            function identity(x) { return x; }\n            \n            var s, m, t = axis.options.transform || identity,\n                it = axis.options.inverseTransform;\n            \n            // precompute how much the axis is scaling a point\n            // in canvas space\n            if (axis.direction == \"x\") {\n                s = axis.scale = plotWidth / Math.abs(t(axis.max) - t(axis.min));\n                m = Math.min(t(axis.max), t(axis.min));\n            }\n            else {\n                s = axis.scale = plotHeight / Math.abs(t(axis.max) - t(axis.min));\n                s = -s;\n                m = Math.max(t(axis.max), t(axis.min));\n            }\n\n            // data point to canvas coordinate\n            if (t == identity) // slight optimization\n                axis.p2c = function (p) { return (p - m) * s; };\n            else\n                axis.p2c = function (p) { return (t(p) - m) * s; };\n            // canvas coordinate to data point\n            if (!it)\n                axis.c2p = function (c) { return m + c / s; };\n            else\n                axis.c2p = function (c) { return it(m + c / s); };\n        }\n\n        function measureTickLabels(axis) {\n            var opts = axis.options, i, ticks = axis.ticks || [], labels = [],\n                l, w = opts.labelWidth, h = opts.labelHeight, dummyDiv;\n\n            function makeDummyDiv(labels, width) {\n                return $('<div style=\"position:absolute;top:-10000px;' + width + 'font-size:smaller\">' +\n                         '<div class=\"' + axis.direction + 'Axis ' + axis.direction + axis.n + 'Axis\">'\n                         + labels.join(\"\") + '</div></div>')\n                    .appendTo(placeholder);\n            }\n            \n            if (axis.direction == \"x\") {\n                // to avoid measuring the widths of the labels (it's slow), we\n                // construct fixed-size boxes and put the labels inside\n                // them, we don't need the exact figures and the\n                // fixed-size box content is easy to center\n                if (w == null)\n                    w = Math.floor(canvasWidth / (ticks.length > 0 ? ticks.length : 1));\n\n                // measure x label heights\n                if (h == null) {\n                    labels = [];\n                    for (i = 0; i < ticks.length; ++i) {\n                        l = ticks[i].label;\n                        if (l)\n                            labels.push('<div class=\"tickLabel\" style=\"float:left;width:' + w + 'px\">' + l + '</div>');\n                    }\n\n                    if (labels.length > 0) {\n                        // stick them all in the same div and measure\n                        // collective height\n                        labels.push('<div style=\"clear:left\"></div>');\n                        dummyDiv = makeDummyDiv(labels, \"width:10000px;\");\n                        h = dummyDiv.height();\n                        dummyDiv.remove();\n                    }\n                }\n            }\n            else if (w == null || h == null) {\n                // calculate y label dimensions\n                for (i = 0; i < ticks.length; ++i) {\n                    l = ticks[i].label;\n                    if (l)\n                        labels.push('<div class=\"tickLabel\">' + l + '</div>');\n                }\n                \n                if (labels.length > 0) {\n                    dummyDiv = makeDummyDiv(labels, \"\");\n                    if (w == null)\n                        w = dummyDiv.children().width();\n                    if (h == null)\n                        h = dummyDiv.find(\"div.tickLabel\").height();\n                    dummyDiv.remove();\n                }\n            }\n\n            if (w == null)\n                w = 0;\n            if (h == null)\n                h = 0;\n\n            axis.labelWidth = w;\n            axis.labelHeight = h;\n        }\n\n        function allocateAxisBoxFirstPhase(axis) {\n            // find the bounding box of the axis by looking at label\n            // widths/heights and ticks, make room by diminishing the\n            // plotOffset\n\n            var lw = axis.labelWidth,\n                lh = axis.labelHeight,\n                pos = axis.options.position,\n                tickLength = axis.options.tickLength,\n                axismargin = options.grid.axisMargin,\n                padding = options.grid.labelMargin,\n                all = axis.direction == \"x\" ? xaxes : yaxes,\n                index;\n\n            // determine axis margin\n            var samePosition = $.grep(all, function (a) {\n                return a && a.options.position == pos && a.reserveSpace;\n            });\n            if ($.inArray(axis, samePosition) == samePosition.length - 1)\n                axismargin = 0; // outermost\n\n            // determine tick length - if we're innermost, we can use \"full\"\n            if (tickLength == null)\n                tickLength = \"full\";\n\n            var sameDirection = $.grep(all, function (a) {\n                return a && a.reserveSpace;\n            });\n\n            var innermost = $.inArray(axis, sameDirection) == 0;\n            if (!innermost && tickLength == \"full\")\n                tickLength = 5;\n                \n            if (!isNaN(+tickLength))\n                padding += +tickLength;\n\n            // compute box\n            if (axis.direction == \"x\") {\n                lh += padding;\n                \n                if (pos == \"bottom\") {\n                    plotOffset.bottom += lh + axismargin;\n                    axis.box = { top: canvasHeight - plotOffset.bottom, height: lh };\n                }\n                else {\n                    axis.box = { top: plotOffset.top + axismargin, height: lh };\n                    plotOffset.top += lh + axismargin;\n                }\n            }\n            else {\n                lw += padding;\n                \n                if (pos == \"left\") {\n                    axis.box = { left: plotOffset.left + axismargin, width: lw };\n                    plotOffset.left += lw + axismargin;\n                }\n                else {\n                    plotOffset.right += lw + axismargin;\n                    axis.box = { left: canvasWidth - plotOffset.right, width: lw };\n                }\n            }\n\n             // save for future reference\n            axis.position = pos;\n            axis.tickLength = tickLength;\n            axis.box.padding = padding;\n            axis.innermost = innermost;\n        }\n\n        function allocateAxisBoxSecondPhase(axis) {\n            // set remaining bounding box coordinates\n            if (axis.direction == \"x\") {\n                axis.box.left = plotOffset.left;\n                axis.box.width = plotWidth;\n            }\n            else {\n                axis.box.top = plotOffset.top;\n                axis.box.height = plotHeight;\n            }\n        }\n        \n        function setupGrid() {\n            var i, axes = allAxes();\n\n            // first calculate the plot and axis box dimensions\n\n            $.each(axes, function (_, axis) {\n                axis.show = axis.options.show;\n                if (axis.show == null)\n                    axis.show = axis.used; // by default an axis is visible if it's got data\n                \n                axis.reserveSpace = axis.show || axis.options.reserveSpace;\n\n                setRange(axis);\n            });\n\n            allocatedAxes = $.grep(axes, function (axis) { return axis.reserveSpace; });\n\n            plotOffset.left = plotOffset.right = plotOffset.top = plotOffset.bottom = 0;\n            if (options.grid.show) {\n                $.each(allocatedAxes, function (_, axis) {\n                    // make the ticks\n                    setupTickGeneration(axis);\n                    setTicks(axis);\n                    snapRangeToTicks(axis, axis.ticks);\n\n                    // find labelWidth/Height for axis\n                    measureTickLabels(axis);\n                });\n\n                // with all dimensions in house, we can compute the\n                // axis boxes, start from the outside (reverse order)\n                for (i = allocatedAxes.length - 1; i >= 0; --i)\n                    allocateAxisBoxFirstPhase(allocatedAxes[i]);\n\n                // make sure we've got enough space for things that\n                // might stick out\n                var minMargin = options.grid.minBorderMargin;\n                if (minMargin == null) {\n                    minMargin = 0;\n                    for (i = 0; i < series.length; ++i)\n                        minMargin = Math.max(minMargin, series[i].points.radius + series[i].points.lineWidth/2);\n                }\n                    \n                for (var a in plotOffset) {\n                    plotOffset[a] += options.grid.borderWidth;\n                    plotOffset[a] = Math.max(minMargin, plotOffset[a]);\n                }\n            }\n            \n            plotWidth = canvasWidth - plotOffset.left - plotOffset.right;\n            plotHeight = canvasHeight - plotOffset.bottom - plotOffset.top;\n\n            // now we got the proper plotWidth/Height, we can compute the scaling\n            $.each(axes, function (_, axis) {\n                setTransformationHelpers(axis);\n            });\n\n            if (options.grid.show) {\n                $.each(allocatedAxes, function (_, axis) {\n                    allocateAxisBoxSecondPhase(axis);\n                });\n\n                insertAxisLabels();\n            }\n            \n            insertLegend();\n        }\n        \n        function setRange(axis) {\n            var opts = axis.options,\n                min = +(opts.min != null ? opts.min : axis.datamin),\n                max = +(opts.max != null ? opts.max : axis.datamax),\n                delta = max - min;\n\n            if (delta == 0.0) {\n                // degenerate case\n                var widen = max == 0 ? 1 : 0.01;\n\n                if (opts.min == null)\n                    min -= widen;\n                // always widen max if we couldn't widen min to ensure we\n                // don't fall into min == max which doesn't work\n                if (opts.max == null || opts.min != null)\n                    max += widen;\n            }\n            else {\n                // consider autoscaling\n                var margin = opts.autoscaleMargin;\n                if (margin != null) {\n                    if (opts.min == null) {\n                        min -= delta * margin;\n                        // make sure we don't go below zero if all values\n                        // are positive\n                        if (min < 0 && axis.datamin != null && axis.datamin >= 0)\n                            min = 0;\n                    }\n                    if (opts.max == null) {\n                        max += delta * margin;\n                        if (max > 0 && axis.datamax != null && axis.datamax <= 0)\n                            max = 0;\n                    }\n                }\n            }\n            axis.min = min;\n            axis.max = max;\n        }\n\n        function setupTickGeneration(axis) {\n            var opts = axis.options;\n                \n            // estimate number of ticks\n            var noTicks;\n            if (typeof opts.ticks == \"number\" && opts.ticks > 0)\n                noTicks = opts.ticks;\n            else\n                // heuristic based on the model a*sqrt(x) fitted to\n                // some data points that seemed reasonable\n                noTicks = 0.3 * Math.sqrt(axis.direction == \"x\" ? canvasWidth : canvasHeight);\n\n            var delta = (axis.max - axis.min) / noTicks,\n                size, generator, unit, formatter, i, magn, norm;\n\n            if (opts.mode == \"time\") {\n                // pretty handling of time\n                \n                // map of app. size of time units in milliseconds\n                var timeUnitSize = {\n                    \"second\": 1000,\n                    \"minute\": 60 * 1000,\n                    \"hour\": 60 * 60 * 1000,\n                    \"day\": 24 * 60 * 60 * 1000,\n                    \"month\": 30 * 24 * 60 * 60 * 1000,\n                    \"year\": 365.2425 * 24 * 60 * 60 * 1000\n                };\n\n\n                // the allowed tick sizes, after 1 year we use\n                // an integer algorithm\n                var spec = [\n                    [1, \"second\"], [2, \"second\"], [5, \"second\"], [10, \"second\"],\n                    [30, \"second\"], \n                    [1, \"minute\"], [2, \"minute\"], [5, \"minute\"], [10, \"minute\"],\n                    [30, \"minute\"], \n                    [1, \"hour\"], [2, \"hour\"], [4, \"hour\"],\n                    [8, \"hour\"], [12, \"hour\"],\n                    [1, \"day\"], [2, \"day\"], [3, \"day\"],\n                    [0.25, \"month\"], [0.5, \"month\"], [1, \"month\"],\n                    [2, \"month\"], [3, \"month\"], [6, \"month\"],\n                    [1, \"year\"]\n                ];\n\n                var minSize = 0;\n                if (opts.minTickSize != null) {\n                    if (typeof opts.tickSize == \"number\")\n                        minSize = opts.tickSize;\n                    else\n                        minSize = opts.minTickSize[0] * timeUnitSize[opts.minTickSize[1]];\n                }\n\n                for (var i = 0; i < spec.length - 1; ++i)\n                    if (delta < (spec[i][0] * timeUnitSize[spec[i][1]]\n                                 + spec[i + 1][0] * timeUnitSize[spec[i + 1][1]]) / 2\n                       && spec[i][0] * timeUnitSize[spec[i][1]] >= minSize)\n                        break;\n                size = spec[i][0];\n                unit = spec[i][1];\n                \n                // special-case the possibility of several years\n                if (unit == \"year\") {\n                    magn = Math.pow(10, Math.floor(Math.log(delta / timeUnitSize.year) / Math.LN10));\n                    norm = (delta / timeUnitSize.year) / magn;\n                    if (norm < 1.5)\n                        size = 1;\n                    else if (norm < 3)\n                        size = 2;\n                    else if (norm < 7.5)\n                        size = 5;\n                    else\n                        size = 10;\n\n                    size *= magn;\n                }\n\n                axis.tickSize = opts.tickSize || [size, unit];\n                \n                generator = function(axis) {\n                    var ticks = [],\n                        tickSize = axis.tickSize[0], unit = axis.tickSize[1],\n                        d = new Date(axis.min);\n                    \n                    var step = tickSize * timeUnitSize[unit];\n\n                    if (unit == \"second\")\n                        d.setUTCSeconds(floorInBase(d.getUTCSeconds(), tickSize));\n                    if (unit == \"minute\")\n                        d.setUTCMinutes(floorInBase(d.getUTCMinutes(), tickSize));\n                    if (unit == \"hour\")\n                        d.setUTCHours(floorInBase(d.getUTCHours(), tickSize));\n                    if (unit == \"month\")\n                        d.setUTCMonth(floorInBase(d.getUTCMonth(), tickSize));\n                    if (unit == \"year\")\n                        d.setUTCFullYear(floorInBase(d.getUTCFullYear(), tickSize));\n                    \n                    // reset smaller components\n                    d.setUTCMilliseconds(0);\n                    if (step >= timeUnitSize.minute)\n                        d.setUTCSeconds(0);\n                    if (step >= timeUnitSize.hour)\n                        d.setUTCMinutes(0);\n                    if (step >= timeUnitSize.day)\n                        d.setUTCHours(0);\n                    if (step >= timeUnitSize.day * 4)\n                        d.setUTCDate(1);\n                    if (step >= timeUnitSize.year)\n                        d.setUTCMonth(0);\n\n\n                    var carry = 0, v = Number.NaN, prev;\n                    do {\n                        prev = v;\n                        v = d.getTime();\n                        ticks.push(v);\n                        if (unit == \"month\") {\n                            if (tickSize < 1) {\n                                // a bit complicated - we'll divide the month\n                                // up but we need to take care of fractions\n                                // so we don't end up in the middle of a day\n                                d.setUTCDate(1);\n                                var start = d.getTime();\n                                d.setUTCMonth(d.getUTCMonth() + 1);\n                                var end = d.getTime();\n                                d.setTime(v + carry * timeUnitSize.hour + (end - start) * tickSize);\n                                carry = d.getUTCHours();\n                                d.setUTCHours(0);\n                            }\n                            else\n                                d.setUTCMonth(d.getUTCMonth() + tickSize);\n                        }\n                        else if (unit == \"year\") {\n                            d.setUTCFullYear(d.getUTCFullYear() + tickSize);\n                        }\n                        else\n                            d.setTime(v + step);\n                    } while (v < axis.max && v != prev);\n\n                    return ticks;\n                };\n\n                formatter = function (v, axis) {\n                    var d = new Date(v);\n\n                    // first check global format\n                    if (opts.timeformat != null)\n                        return $.plot.formatDate(d, opts.timeformat, opts.monthNames);\n                    \n                    var t = axis.tickSize[0] * timeUnitSize[axis.tickSize[1]];\n                    var span = axis.max - axis.min;\n                    var suffix = (opts.twelveHourClock) ? \" %p\" : \"\";\n                    \n                    if (t < timeUnitSize.minute)\n                        fmt = \"%h:%M:%S\" + suffix;\n                    else if (t < timeUnitSize.day) {\n                        if (span < 2 * timeUnitSize.day)\n                            fmt = \"%h:%M\" + suffix;\n                        else\n                            fmt = \"%b %d %h:%M\" + suffix;\n                    }\n                    else if (t < timeUnitSize.month)\n                        fmt = \"%b %d\";\n                    else if (t < timeUnitSize.year) {\n                        if (span < timeUnitSize.year)\n                            fmt = \"%b\";\n                        else\n                            fmt = \"%b %y\";\n                    }\n                    else\n                        fmt = \"%y\";\n                    \n                    return $.plot.formatDate(d, fmt, opts.monthNames);\n                };\n            }\n            else {\n                // pretty rounding of base-10 numbers\n                var maxDec = opts.tickDecimals;\n                var dec = -Math.floor(Math.log(delta) / Math.LN10);\n                if (maxDec != null && dec > maxDec)\n                    dec = maxDec;\n\n                magn = Math.pow(10, -dec);\n                norm = delta / magn; // norm is between 1.0 and 10.0\n                \n                if (norm < 1.5)\n                    size = 1;\n                else if (norm < 3) {\n                    size = 2;\n                    // special case for 2.5, requires an extra decimal\n                    if (norm > 2.25 && (maxDec == null || dec + 1 <= maxDec)) {\n                        size = 2.5;\n                        ++dec;\n                    }\n                }\n                else if (norm < 7.5)\n                    size = 5;\n                else\n                    size = 10;\n\n                size *= magn;\n                \n                if (opts.minTickSize != null && size < opts.minTickSize)\n                    size = opts.minTickSize;\n\n                axis.tickDecimals = Math.max(0, maxDec != null ? maxDec : dec);\n                axis.tickSize = opts.tickSize || size;\n\n                generator = function (axis) {\n                    var ticks = [];\n\n                    // spew out all possible ticks\n                    var start = floorInBase(axis.min, axis.tickSize),\n                        i = 0, v = Number.NaN, prev;\n                    do {\n                        prev = v;\n                        v = start + i * axis.tickSize;\n                        ticks.push(v);\n                        ++i;\n                    } while (v < axis.max && v != prev);\n                    return ticks;\n                };\n\n                formatter = function (v, axis) {\n                    return v.toFixed(axis.tickDecimals);\n                };\n            }\n\n            if (opts.alignTicksWithAxis != null) {\n                var otherAxis = (axis.direction == \"x\" ? xaxes : yaxes)[opts.alignTicksWithAxis - 1];\n                if (otherAxis && otherAxis.used && otherAxis != axis) {\n                    // consider snapping min/max to outermost nice ticks\n                    var niceTicks = generator(axis);\n                    if (niceTicks.length > 0) {\n                        if (opts.min == null)\n                            axis.min = Math.min(axis.min, niceTicks[0]);\n                        if (opts.max == null && niceTicks.length > 1)\n                            axis.max = Math.max(axis.max, niceTicks[niceTicks.length - 1]);\n                    }\n                    \n                    generator = function (axis) {\n                        // copy ticks, scaled to this axis\n                        var ticks = [], v, i;\n                        for (i = 0; i < otherAxis.ticks.length; ++i) {\n                            v = (otherAxis.ticks[i].v - otherAxis.min) / (otherAxis.max - otherAxis.min);\n                            v = axis.min + v * (axis.max - axis.min);\n                            ticks.push(v);\n                        }\n                        return ticks;\n                    };\n                    \n                    // we might need an extra decimal since forced\n                    // ticks don't necessarily fit naturally\n                    if (axis.mode != \"time\" && opts.tickDecimals == null) {\n                        var extraDec = Math.max(0, -Math.floor(Math.log(delta) / Math.LN10) + 1),\n                            ts = generator(axis);\n\n                        // only proceed if the tick interval rounded\n                        // with an extra decimal doesn't give us a\n                        // zero at end\n                        if (!(ts.length > 1 && /\\..*0$/.test((ts[1] - ts[0]).toFixed(extraDec))))\n                            axis.tickDecimals = extraDec;\n                    }\n                }\n            }\n\n            axis.tickGenerator = generator;\n            if ($.isFunction(opts.tickFormatter))\n                axis.tickFormatter = function (v, axis) { return \"\" + opts.tickFormatter(v, axis); };\n            else\n                axis.tickFormatter = formatter;\n        }\n        \n        function setTicks(axis) {\n            var oticks = axis.options.ticks, ticks = [];\n            if (oticks == null || (typeof oticks == \"number\" && oticks > 0))\n                ticks = axis.tickGenerator(axis);\n            else if (oticks) {\n                if ($.isFunction(oticks))\n                    // generate the ticks\n                    ticks = oticks({ min: axis.min, max: axis.max });\n                else\n                    ticks = oticks;\n            }\n\n            // clean up/labelify the supplied ticks, copy them over\n            var i, v;\n            axis.ticks = [];\n            for (i = 0; i < ticks.length; ++i) {\n                var label = null;\n                var t = ticks[i];\n                if (typeof t == \"object\") {\n                    v = +t[0];\n                    if (t.length > 1)\n                        label = t[1];\n                }\n                else\n                    v = +t;\n                if (label == null)\n                    label = axis.tickFormatter(v, axis);\n                if (!isNaN(v))\n                    axis.ticks.push({ v: v, label: label });\n            }\n        }\n\n        function snapRangeToTicks(axis, ticks) {\n            if (axis.options.autoscaleMargin && ticks.length > 0) {\n                // snap to ticks\n                if (axis.options.min == null)\n                    axis.min = Math.min(axis.min, ticks[0].v);\n                if (axis.options.max == null && ticks.length > 1)\n                    axis.max = Math.max(axis.max, ticks[ticks.length - 1].v);\n            }\n        }\n      \n        function draw() {\n            ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n\n            var grid = options.grid;\n\n            // draw background, if any\n            if (grid.show && grid.backgroundColor)\n                drawBackground();\n            \n            if (grid.show && !grid.aboveData)\n                drawGrid();\n\n            for (var i = 0; i < series.length; ++i) {\n                executeHooks(hooks.drawSeries, [ctx, series[i]]);\n                drawSeries(series[i]);\n            }\n\n            executeHooks(hooks.draw, [ctx]);\n            \n            if (grid.show && grid.aboveData)\n                drawGrid();\n        }\n\n        function extractRange(ranges, coord) {\n            var axis, from, to, key, axes = allAxes();\n\n            for (i = 0; i < axes.length; ++i) {\n                axis = axes[i];\n                if (axis.direction == coord) {\n                    key = coord + axis.n + \"axis\";\n                    if (!ranges[key] && axis.n == 1)\n                        key = coord + \"axis\"; // support x1axis as xaxis\n                    if (ranges[key]) {\n                        from = ranges[key].from;\n                        to = ranges[key].to;\n                        break;\n                    }\n                }\n            }\n\n            // backwards-compat stuff - to be removed in future\n            if (!ranges[key]) {\n                axis = coord == \"x\" ? xaxes[0] : yaxes[0];\n                from = ranges[coord + \"1\"];\n                to = ranges[coord + \"2\"];\n            }\n\n            // auto-reverse as an added bonus\n            if (from != null && to != null && from > to) {\n                var tmp = from;\n                from = to;\n                to = tmp;\n            }\n            \n            return { from: from, to: to, axis: axis };\n        }\n        \n        function drawBackground() {\n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n\n            ctx.fillStyle = getColorOrGradient(options.grid.backgroundColor, plotHeight, 0, \"rgba(255, 255, 255, 0)\");\n            ctx.fillRect(0, 0, plotWidth, plotHeight);\n            ctx.restore();\n        }\n\n        function drawGrid() {\n            var i;\n            \n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n\n            // draw markings\n            var markings = options.grid.markings;\n            if (markings) {\n                if ($.isFunction(markings)) {\n                    var axes = plot.getAxes();\n                    // xmin etc. is backwards compatibility, to be\n                    // removed in the future\n                    axes.xmin = axes.xaxis.min;\n                    axes.xmax = axes.xaxis.max;\n                    axes.ymin = axes.yaxis.min;\n                    axes.ymax = axes.yaxis.max;\n                    \n                    markings = markings(axes);\n                }\n\n                for (i = 0; i < markings.length; ++i) {\n                    var m = markings[i],\n                        xrange = extractRange(m, \"x\"),\n                        yrange = extractRange(m, \"y\");\n\n                    // fill in missing\n                    if (xrange.from == null)\n                        xrange.from = xrange.axis.min;\n                    if (xrange.to == null)\n                        xrange.to = xrange.axis.max;\n                    if (yrange.from == null)\n                        yrange.from = yrange.axis.min;\n                    if (yrange.to == null)\n                        yrange.to = yrange.axis.max;\n\n                    // clip\n                    if (xrange.to < xrange.axis.min || xrange.from > xrange.axis.max ||\n                        yrange.to < yrange.axis.min || yrange.from > yrange.axis.max)\n                        continue;\n\n                    xrange.from = Math.max(xrange.from, xrange.axis.min);\n                    xrange.to = Math.min(xrange.to, xrange.axis.max);\n                    yrange.from = Math.max(yrange.from, yrange.axis.min);\n                    yrange.to = Math.min(yrange.to, yrange.axis.max);\n\n                    if (xrange.from == xrange.to && yrange.from == yrange.to)\n                        continue;\n\n                    // then draw\n                    xrange.from = xrange.axis.p2c(xrange.from);\n                    xrange.to = xrange.axis.p2c(xrange.to);\n                    yrange.from = yrange.axis.p2c(yrange.from);\n                    yrange.to = yrange.axis.p2c(yrange.to);\n                    \n                    if (xrange.from == xrange.to || yrange.from == yrange.to) {\n                        // draw line\n                        ctx.beginPath();\n                        ctx.strokeStyle = m.color || options.grid.markingsColor;\n                        ctx.lineWidth = m.lineWidth || options.grid.markingsLineWidth;\n                        ctx.moveTo(xrange.from, yrange.from);\n                        ctx.lineTo(xrange.to, yrange.to);\n                        ctx.stroke();\n                    }\n                    else {\n                        // fill area\n                        ctx.fillStyle = m.color || options.grid.markingsColor;\n                        ctx.fillRect(xrange.from, yrange.to,\n                                     xrange.to - xrange.from,\n                                     yrange.from - yrange.to);\n                    }\n                }\n            }\n            \n            // draw the ticks\n            var axes = allAxes(), bw = options.grid.borderWidth;\n\n            for (var j = 0; j < axes.length; ++j) {\n                var axis = axes[j], box = axis.box,\n                    t = axis.tickLength, x, y, xoff, yoff;\n                if (!axis.show || axis.ticks.length == 0)\n                    continue\n                \n                ctx.strokeStyle = axis.options.tickColor || $.color.parse(axis.options.color).scale('a', 0.22).toString();\n                ctx.lineWidth = 1;\n\n                // find the edges\n                if (axis.direction == \"x\") {\n                    x = 0;\n                    if (t == \"full\")\n                        y = (axis.position == \"top\" ? 0 : plotHeight);\n                    else\n                        y = box.top - plotOffset.top + (axis.position == \"top\" ? box.height : 0);\n                }\n                else {\n                    y = 0;\n                    if (t == \"full\")\n                        x = (axis.position == \"left\" ? 0 : plotWidth);\n                    else\n                        x = box.left - plotOffset.left + (axis.position == \"left\" ? box.width : 0);\n                }\n                \n                // draw tick bar\n                if (!axis.innermost) {\n                    ctx.beginPath();\n                    xoff = yoff = 0;\n                    if (axis.direction == \"x\")\n                        xoff = plotWidth;\n                    else\n                        yoff = plotHeight;\n                    \n                    if (ctx.lineWidth == 1) {\n                        x = Math.floor(x) + 0.5;\n                        y = Math.floor(y) + 0.5;\n                    }\n\n                    ctx.moveTo(x, y);\n                    ctx.lineTo(x + xoff, y + yoff);\n                    ctx.stroke();\n                }\n\n                // draw ticks\n                ctx.beginPath();\n                for (i = 0; i < axis.ticks.length; ++i) {\n                    var v = axis.ticks[i].v;\n                    \n                    xoff = yoff = 0;\n\n                    if (v < axis.min || v > axis.max\n                        // skip those lying on the axes if we got a border\n                        || (t == \"full\" && bw > 0\n                            && (v == axis.min || v == axis.max)))\n                        continue;\n\n                    if (axis.direction == \"x\") {\n                        x = axis.p2c(v);\n                        yoff = t == \"full\" ? -plotHeight : t;\n                        \n                        if (axis.position == \"top\")\n                            yoff = -yoff;\n                    }\n                    else {\n                        y = axis.p2c(v);\n                        xoff = t == \"full\" ? -plotWidth : t;\n                        \n                        if (axis.position == \"left\")\n                            xoff = -xoff;\n                    }\n\n                    if (ctx.lineWidth == 1) {\n                        if (axis.direction == \"x\")\n                            x = Math.floor(x) + 0.5;\n                        else\n                            y = Math.floor(y) + 0.5;\n                    }\n\n                    ctx.moveTo(x, y);\n                    ctx.lineTo(x + xoff, y + yoff);\n                }\n                \n                ctx.stroke();\n            }\n            \n            \n            // draw border\n            if (bw) {\n                ctx.lineWidth = bw;\n                ctx.strokeStyle = options.grid.borderColor;\n                ctx.strokeRect(-bw/2, -bw/2, plotWidth + bw, plotHeight + bw);\n            }\n\n            ctx.restore();\n        }\n\n        function insertAxisLabels() {\n            placeholder.find(\".tickLabels\").remove();\n            \n            var html = ['<div class=\"tickLabels\" style=\"font-size:smaller\">'];\n\n            var axes = allAxes();\n            for (var j = 0; j < axes.length; ++j) {\n                var axis = axes[j], box = axis.box;\n                if (!axis.show)\n                    continue;\n                //debug: html.push('<div style=\"position:absolute;opacity:0.10;background-color:red;left:' + box.left + 'px;top:' + box.top + 'px;width:' + box.width +  'px;height:' + box.height + 'px\"></div>')\n                html.push('<div class=\"' + axis.direction + 'Axis ' + axis.direction + axis.n + 'Axis\" style=\"color:' + axis.options.color + '\">');\n                for (var i = 0; i < axis.ticks.length; ++i) {\n                    var tick = axis.ticks[i];\n                    if (!tick.label || tick.v < axis.min || tick.v > axis.max)\n                        continue;\n\n                    var pos = {}, align;\n                    \n                    if (axis.direction == \"x\") {\n                        align = \"center\";\n                        pos.left = Math.round(plotOffset.left + axis.p2c(tick.v) - axis.labelWidth/2);\n                        if (axis.position == \"bottom\")\n                            pos.top = box.top + box.padding;\n                        else\n                            pos.bottom = canvasHeight - (box.top + box.height - box.padding);\n                    }\n                    else {\n                        pos.top = Math.round(plotOffset.top + axis.p2c(tick.v) - axis.labelHeight/2);\n                        if (axis.position == \"left\") {\n                            pos.right = canvasWidth - (box.left + box.width - box.padding)\n                            align = \"right\";\n                        }\n                        else {\n                            pos.left = box.left + box.padding;\n                            align = \"left\";\n                        }\n                    }\n\n                    pos.width = axis.labelWidth;\n\n                    var style = [\"position:absolute\", \"text-align:\" + align ];\n                    for (var a in pos)\n                        style.push(a + \":\" + pos[a] + \"px\")\n                    \n                    html.push('<div class=\"tickLabel\" style=\"' + style.join(';') + '\">' + tick.label + '</div>');\n                }\n                html.push('</div>');\n            }\n\n            html.push('</div>');\n\n            placeholder.append(html.join(\"\"));\n        }\n\n        function drawSeries(series) {\n            if (series.lines.show)\n                drawSeriesLines(series);\n            if (series.bars.show)\n                drawSeriesBars(series);\n            if (series.points.show)\n                drawSeriesPoints(series);\n        }\n        \n        function drawSeriesLines(series) {\n            function plotLine(datapoints, xoffset, yoffset, axisx, axisy) {\n                var points = datapoints.points,\n                    ps = datapoints.pointsize,\n                    prevx = null, prevy = null;\n                \n                ctx.beginPath();\n                for (var i = ps; i < points.length; i += ps) {\n                    var x1 = points[i - ps], y1 = points[i - ps + 1],\n                        x2 = points[i], y2 = points[i + 1];\n                    \n                    if (x1 == null || x2 == null)\n                        continue;\n\n                    // clip with ymin\n                    if (y1 <= y2 && y1 < axisy.min) {\n                        if (y2 < axisy.min)\n                            continue;   // line segment is outside\n                        // compute new intersection point\n                        x1 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y1 = axisy.min;\n                    }\n                    else if (y2 <= y1 && y2 < axisy.min) {\n                        if (y1 < axisy.min)\n                            continue;\n                        x2 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y2 = axisy.min;\n                    }\n\n                    // clip with ymax\n                    if (y1 >= y2 && y1 > axisy.max) {\n                        if (y2 > axisy.max)\n                            continue;\n                        x1 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y1 = axisy.max;\n                    }\n                    else if (y2 >= y1 && y2 > axisy.max) {\n                        if (y1 > axisy.max)\n                            continue;\n                        x2 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y2 = axisy.max;\n                    }\n\n                    // clip with xmin\n                    if (x1 <= x2 && x1 < axisx.min) {\n                        if (x2 < axisx.min)\n                            continue;\n                        y1 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x1 = axisx.min;\n                    }\n                    else if (x2 <= x1 && x2 < axisx.min) {\n                        if (x1 < axisx.min)\n                            continue;\n                        y2 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x2 = axisx.min;\n                    }\n\n                    // clip with xmax\n                    if (x1 >= x2 && x1 > axisx.max) {\n                        if (x2 > axisx.max)\n                            continue;\n                        y1 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x1 = axisx.max;\n                    }\n                    else if (x2 >= x1 && x2 > axisx.max) {\n                        if (x1 > axisx.max)\n                            continue;\n                        y2 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x2 = axisx.max;\n                    }\n\n                    if (x1 != prevx || y1 != prevy)\n                        ctx.moveTo(axisx.p2c(x1) + xoffset, axisy.p2c(y1) + yoffset);\n                    \n                    prevx = x2;\n                    prevy = y2;\n                    ctx.lineTo(axisx.p2c(x2) + xoffset, axisy.p2c(y2) + yoffset);\n                }\n                ctx.stroke();\n            }\n\n            function plotLineArea(datapoints, axisx, axisy) {\n                var points = datapoints.points,\n                    ps = datapoints.pointsize,\n                    bottom = Math.min(Math.max(0, axisy.min), axisy.max),\n                    i = 0, top, areaOpen = false,\n                    ypos = 1, segmentStart = 0, segmentEnd = 0;\n\n                // we process each segment in two turns, first forward\n                // direction to sketch out top, then once we hit the\n                // end we go backwards to sketch the bottom\n                while (true) {\n                    if (ps > 0 && i > points.length + ps)\n                        break;\n\n                    i += ps; // ps is negative if going backwards\n\n                    var x1 = points[i - ps],\n                        y1 = points[i - ps + ypos],\n                        x2 = points[i], y2 = points[i + ypos];\n\n                    if (areaOpen) {\n                        if (ps > 0 && x1 != null && x2 == null) {\n                            // at turning point\n                            segmentEnd = i;\n                            ps = -ps;\n                            ypos = 2;\n                            continue;\n                        }\n\n                        if (ps < 0 && i == segmentStart + ps) {\n                            // done with the reverse sweep\n                            ctx.fill();\n                            areaOpen = false;\n                            ps = -ps;\n                            ypos = 1;\n                            i = segmentStart = segmentEnd + ps;\n                            continue;\n                        }\n                    }\n\n                    if (x1 == null || x2 == null)\n                        continue;\n\n                    // clip x values\n                    \n                    // clip with xmin\n                    if (x1 <= x2 && x1 < axisx.min) {\n                        if (x2 < axisx.min)\n                            continue;\n                        y1 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x1 = axisx.min;\n                    }\n                    else if (x2 <= x1 && x2 < axisx.min) {\n                        if (x1 < axisx.min)\n                            continue;\n                        y2 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x2 = axisx.min;\n                    }\n\n                    // clip with xmax\n                    if (x1 >= x2 && x1 > axisx.max) {\n                        if (x2 > axisx.max)\n                            continue;\n                        y1 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x1 = axisx.max;\n                    }\n                    else if (x2 >= x1 && x2 > axisx.max) {\n                        if (x1 > axisx.max)\n                            continue;\n                        y2 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x2 = axisx.max;\n                    }\n\n                    if (!areaOpen) {\n                        // open area\n                        ctx.beginPath();\n                        ctx.moveTo(axisx.p2c(x1), axisy.p2c(bottom));\n                        areaOpen = true;\n                    }\n                    \n                    // now first check the case where both is outside\n                    if (y1 >= axisy.max && y2 >= axisy.max) {\n                        ctx.lineTo(axisx.p2c(x1), axisy.p2c(axisy.max));\n                        ctx.lineTo(axisx.p2c(x2), axisy.p2c(axisy.max));\n                        continue;\n                    }\n                    else if (y1 <= axisy.min && y2 <= axisy.min) {\n                        ctx.lineTo(axisx.p2c(x1), axisy.p2c(axisy.min));\n                        ctx.lineTo(axisx.p2c(x2), axisy.p2c(axisy.min));\n                        continue;\n                    }\n                    \n                    // else it's a bit more complicated, there might\n                    // be a flat maxed out rectangle first, then a\n                    // triangular cutout or reverse; to find these\n                    // keep track of the current x values\n                    var x1old = x1, x2old = x2;\n\n                    // clip the y values, without shortcutting, we\n                    // go through all cases in turn\n                    \n                    // clip with ymin\n                    if (y1 <= y2 && y1 < axisy.min && y2 >= axisy.min) {\n                        x1 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y1 = axisy.min;\n                    }\n                    else if (y2 <= y1 && y2 < axisy.min && y1 >= axisy.min) {\n                        x2 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y2 = axisy.min;\n                    }\n\n                    // clip with ymax\n                    if (y1 >= y2 && y1 > axisy.max && y2 <= axisy.max) {\n                        x1 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y1 = axisy.max;\n                    }\n                    else if (y2 >= y1 && y2 > axisy.max && y1 <= axisy.max) {\n                        x2 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y2 = axisy.max;\n                    }\n\n                    // if the x value was changed we got a rectangle\n                    // to fill\n                    if (x1 != x1old) {\n                        ctx.lineTo(axisx.p2c(x1old), axisy.p2c(y1));\n                        // it goes to (x1, y1), but we fill that below\n                    }\n                    \n                    // fill triangular section, this sometimes result\n                    // in redundant points if (x1, y1) hasn't changed\n                    // from previous line to, but we just ignore that\n                    ctx.lineTo(axisx.p2c(x1), axisy.p2c(y1));\n                    ctx.lineTo(axisx.p2c(x2), axisy.p2c(y2));\n\n                    // fill the other rectangle if it's there\n                    if (x2 != x2old) {\n                        ctx.lineTo(axisx.p2c(x2), axisy.p2c(y2));\n                        ctx.lineTo(axisx.p2c(x2old), axisy.p2c(y2));\n                    }\n                }\n            }\n\n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n            ctx.lineJoin = \"round\";\n\n            var lw = series.lines.lineWidth,\n                sw = series.shadowSize;\n            // FIXME: consider another form of shadow when filling is turned on\n            if (lw > 0 && sw > 0) {\n                // draw shadow as a thick and thin line with transparency\n                ctx.lineWidth = sw;\n                ctx.strokeStyle = \"rgba(0,0,0,0.1)\";\n                // position shadow at angle from the mid of line\n                var angle = Math.PI/18;\n                plotLine(series.datapoints, Math.sin(angle) * (lw/2 + sw/2), Math.cos(angle) * (lw/2 + sw/2), series.xaxis, series.yaxis);\n                ctx.lineWidth = sw/2;\n                plotLine(series.datapoints, Math.sin(angle) * (lw/2 + sw/4), Math.cos(angle) * (lw/2 + sw/4), series.xaxis, series.yaxis);\n            }\n\n            ctx.lineWidth = lw;\n            ctx.strokeStyle = series.color;\n            var fillStyle = getFillStyle(series.lines, series.color, 0, plotHeight);\n            if (fillStyle) {\n                ctx.fillStyle = fillStyle;\n                plotLineArea(series.datapoints, series.xaxis, series.yaxis);\n            }\n\n            if (lw > 0)\n                plotLine(series.datapoints, 0, 0, series.xaxis, series.yaxis);\n            ctx.restore();\n        }\n\n        function drawSeriesPoints(series) {\n            function plotPoints(datapoints, radius, fillStyle, offset, shadow, axisx, axisy, symbol) {\n                var points = datapoints.points, ps = datapoints.pointsize;\n\n                for (var i = 0; i < points.length; i += ps) {\n                    var x = points[i], y = points[i + 1];\n                    if (x == null || x < axisx.min || x > axisx.max || y < axisy.min || y > axisy.max)\n                        continue;\n                    \n                    ctx.beginPath();\n                    x = axisx.p2c(x);\n                    y = axisy.p2c(y) + offset;\n                    if (symbol == \"circle\")\n                        ctx.arc(x, y, radius, 0, shadow ? Math.PI : Math.PI * 2, false);\n                    else\n                        symbol(ctx, x, y, radius, shadow);\n                    ctx.closePath();\n                    \n                    if (fillStyle) {\n                        ctx.fillStyle = fillStyle;\n                        ctx.fill();\n                    }\n                    ctx.stroke();\n                }\n            }\n            \n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n\n            var lw = series.points.lineWidth,\n                sw = series.shadowSize,\n                radius = series.points.radius,\n                symbol = series.points.symbol;\n            if (lw > 0 && sw > 0) {\n                // draw shadow in two steps\n                var w = sw / 2;\n                ctx.lineWidth = w;\n                ctx.strokeStyle = \"rgba(0,0,0,0.1)\";\n                plotPoints(series.datapoints, radius, null, w + w/2, true,\n                           series.xaxis, series.yaxis, symbol);\n\n                ctx.strokeStyle = \"rgba(0,0,0,0.2)\";\n                plotPoints(series.datapoints, radius, null, w/2, true,\n                           series.xaxis, series.yaxis, symbol);\n            }\n\n            ctx.lineWidth = lw;\n            ctx.strokeStyle = series.color;\n            plotPoints(series.datapoints, radius,\n                       getFillStyle(series.points, series.color), 0, false,\n                       series.xaxis, series.yaxis, symbol);\n            ctx.restore();\n        }\n\n        function drawBar(x, y, b, barLeft, barRight, offset, fillStyleCallback, axisx, axisy, c, horizontal, lineWidth) {\n            var left, right, bottom, top,\n                drawLeft, drawRight, drawTop, drawBottom,\n                tmp;\n\n            // in horizontal mode, we start the bar from the left\n            // instead of from the bottom so it appears to be\n            // horizontal rather than vertical\n            if (horizontal) {\n                drawBottom = drawRight = drawTop = true;\n                drawLeft = false;\n                left = b;\n                right = x;\n                top = y + barLeft;\n                bottom = y + barRight;\n\n                // account for negative bars\n                if (right < left) {\n                    tmp = right;\n                    right = left;\n                    left = tmp;\n                    drawLeft = true;\n                    drawRight = false;\n                }\n            }\n            else {\n                drawLeft = drawRight = drawTop = true;\n                drawBottom = false;\n                left = x + barLeft;\n                right = x + barRight;\n                bottom = b;\n                top = y;\n\n                // account for negative bars\n                if (top < bottom) {\n                    tmp = top;\n                    top = bottom;\n                    bottom = tmp;\n                    drawBottom = true;\n                    drawTop = false;\n                }\n            }\n           \n            // clip\n            if (right < axisx.min || left > axisx.max ||\n                top < axisy.min || bottom > axisy.max)\n                return;\n            \n            if (left < axisx.min) {\n                left = axisx.min;\n                drawLeft = false;\n            }\n\n            if (right > axisx.max) {\n                right = axisx.max;\n                drawRight = false;\n            }\n\n            if (bottom < axisy.min) {\n                bottom = axisy.min;\n                drawBottom = false;\n            }\n            \n            if (top > axisy.max) {\n                top = axisy.max;\n                drawTop = false;\n            }\n\n            left = axisx.p2c(left);\n            bottom = axisy.p2c(bottom);\n            right = axisx.p2c(right);\n            top = axisy.p2c(top);\n            \n            // fill the bar\n            if (fillStyleCallback) {\n                c.beginPath();\n                c.moveTo(left, bottom);\n                c.lineTo(left, top);\n                c.lineTo(right, top);\n                c.lineTo(right, bottom);\n                c.fillStyle = fillStyleCallback(bottom, top);\n                c.fill();\n            }\n\n            // draw outline\n            if (lineWidth > 0 && (drawLeft || drawRight || drawTop || drawBottom)) {\n                c.beginPath();\n\n                // FIXME: inline moveTo is buggy with excanvas\n                c.moveTo(left, bottom + offset);\n                if (drawLeft)\n                    c.lineTo(left, top + offset);\n                else\n                    c.moveTo(left, top + offset);\n                if (drawTop)\n                    c.lineTo(right, top + offset);\n                else\n                    c.moveTo(right, top + offset);\n                if (drawRight)\n                    c.lineTo(right, bottom + offset);\n                else\n                    c.moveTo(right, bottom + offset);\n                if (drawBottom)\n                    c.lineTo(left, bottom + offset);\n                else\n                    c.moveTo(left, bottom + offset);\n                c.stroke();\n            }\n        }\n        \n        function drawSeriesBars(series) {\n            function plotBars(datapoints, barLeft, barRight, offset, fillStyleCallback, axisx, axisy) {\n                var points = datapoints.points, ps = datapoints.pointsize;\n                \n                for (var i = 0; i < points.length; i += ps) {\n                    if (points[i] == null)\n                        continue;\n                    drawBar(points[i], points[i + 1], points[i + 2], barLeft, barRight, offset, fillStyleCallback, axisx, axisy, ctx, series.bars.horizontal, series.bars.lineWidth);\n                }\n            }\n\n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n\n            // FIXME: figure out a way to add shadows (for instance along the right edge)\n            ctx.lineWidth = series.bars.lineWidth;\n            ctx.strokeStyle = series.color;\n            var barLeft = series.bars.align == \"left\" ? 0 : -series.bars.barWidth/2;\n            var fillStyleCallback = series.bars.fill ? function (bottom, top) { return getFillStyle(series.bars, series.color, bottom, top); } : null;\n            plotBars(series.datapoints, barLeft, barLeft + series.bars.barWidth, 0, fillStyleCallback, series.xaxis, series.yaxis);\n            ctx.restore();\n        }\n\n        function getFillStyle(filloptions, seriesColor, bottom, top) {\n            var fill = filloptions.fill;\n            if (!fill)\n                return null;\n\n            if (filloptions.fillColor)\n                return getColorOrGradient(filloptions.fillColor, bottom, top, seriesColor);\n            \n            var c = $.color.parse(seriesColor);\n            c.a = typeof fill == \"number\" ? fill : 0.4;\n            c.normalize();\n            return c.toString();\n        }\n        \n        function insertLegend() {\n            placeholder.find(\".legend\").remove();\n\n            if (!options.legend.show)\n                return;\n            \n            var fragments = [], rowStarted = false,\n                lf = options.legend.labelFormatter, s, label;\n            for (var i = 0; i < series.length; ++i) {\n                s = series[i];\n                label = s.label;\n                if (!label)\n                    continue;\n                \n                if (i % options.legend.noColumns == 0) {\n                    if (rowStarted)\n                        fragments.push('</tr>');\n                    fragments.push('<tr>');\n                    rowStarted = true;\n                }\n\n                if (lf)\n                    label = lf(label, s);\n                \n                fragments.push(\n                    '<td class=\"legendColorBox\"><div style=\"border:1px solid ' + options.legend.labelBoxBorderColor + ';padding:1px\"><div style=\"width:4px;height:0;border:5px solid ' + s.color + ';overflow:hidden\"></div></div></td>' +\n                    '<td class=\"legendLabel\">' + label + '</td>');\n            }\n            if (rowStarted)\n                fragments.push('</tr>');\n            \n            if (fragments.length == 0)\n                return;\n\n            var table = '<table style=\"font-size:smaller;color:' + options.grid.color + '\">' + fragments.join(\"\") + '</table>';\n            if (options.legend.container != null)\n                $(options.legend.container).html(table);\n            else {\n                var pos = \"\",\n                    p = options.legend.position,\n                    m = options.legend.margin;\n                if (m[0] == null)\n                    m = [m, m];\n                if (p.charAt(0) == \"n\")\n                    pos += 'top:' + (m[1] + plotOffset.top) + 'px;';\n                else if (p.charAt(0) == \"s\")\n                    pos += 'bottom:' + (m[1] + plotOffset.bottom) + 'px;';\n                if (p.charAt(1) == \"e\")\n                    pos += 'right:' + (m[0] + plotOffset.right) + 'px;';\n                else if (p.charAt(1) == \"w\")\n                    pos += 'left:' + (m[0] + plotOffset.left) + 'px;';\n                var legend = $('<div class=\"legend\">' + table.replace('style=\"', 'style=\"position:absolute;' + pos +';') + '</div>').appendTo(placeholder);\n                if (options.legend.backgroundOpacity != 0.0) {\n                    // put in the transparent background\n                    // separately to avoid blended labels and\n                    // label boxes\n                    var c = options.legend.backgroundColor;\n                    if (c == null) {\n                        c = options.grid.backgroundColor;\n                        if (c && typeof c == \"string\")\n                            c = $.color.parse(c);\n                        else\n                            c = $.color.extract(legend, 'background-color');\n                        c.a = 1;\n                        c = c.toString();\n                    }\n                    var div = legend.children();\n                    $('<div style=\"position:absolute;width:' + div.width() + 'px;height:' + div.height() + 'px;' + pos +'background-color:' + c + ';\"> </div>').prependTo(legend).css('opacity', options.legend.backgroundOpacity);\n                }\n            }\n        }\n\n\n        // interactive features\n        \n        var highlights = [],\n            redrawTimeout = null;\n        \n        // returns the data item the mouse is over, or null if none is found\n        function findNearbyItem(mouseX, mouseY, seriesFilter) {\n            var maxDistance = options.grid.mouseActiveRadius,\n                smallestDistance = maxDistance * maxDistance + 1,\n                item = null, foundPoint = false, i, j;\n\n            for (i = series.length - 1; i >= 0; --i) {\n                if (!seriesFilter(series[i]))\n                    continue;\n                \n                var s = series[i],\n                    axisx = s.xaxis,\n                    axisy = s.yaxis,\n                    points = s.datapoints.points,\n                    ps = s.datapoints.pointsize,\n                    mx = axisx.c2p(mouseX), // precompute some stuff to make the loop faster\n                    my = axisy.c2p(mouseY),\n                    maxx = maxDistance / axisx.scale,\n                    maxy = maxDistance / axisy.scale;\n\n                // with inverse transforms, we can't use the maxx/maxy\n                // optimization, sadly\n                if (axisx.options.inverseTransform)\n                    maxx = Number.MAX_VALUE;\n                if (axisy.options.inverseTransform)\n                    maxy = Number.MAX_VALUE;\n                \n                if (s.lines.show || s.points.show) {\n                    for (j = 0; j < points.length; j += ps) {\n                        var x = points[j], y = points[j + 1];\n                        if (x == null)\n                            continue;\n                        \n                        // For points and lines, the cursor must be within a\n                        // certain distance to the data point\n                        if (x - mx > maxx || x - mx < -maxx ||\n                            y - my > maxy || y - my < -maxy)\n                            continue;\n\n                        // We have to calculate distances in pixels, not in\n                        // data units, because the scales of the axes may be different\n                        var dx = Math.abs(axisx.p2c(x) - mouseX),\n                            dy = Math.abs(axisy.p2c(y) - mouseY),\n                            dist = dx * dx + dy * dy; // we save the sqrt\n\n                        // use <= to ensure last point takes precedence\n                        // (last generally means on top of)\n                        if (dist < smallestDistance) {\n                            smallestDistance = dist;\n                            item = [i, j / ps];\n                        }\n                    }\n                }\n                    \n                if (s.bars.show && !item) { // no other point can be nearby\n                    var barLeft = s.bars.align == \"left\" ? 0 : -s.bars.barWidth/2,\n                        barRight = barLeft + s.bars.barWidth;\n                    \n                    for (j = 0; j < points.length; j += ps) {\n                        var x = points[j], y = points[j + 1], b = points[j + 2];\n                        if (x == null)\n                            continue;\n  \n                        // for a bar graph, the cursor must be inside the bar\n                        if (series[i].bars.horizontal ? \n                            (mx <= Math.max(b, x) && mx >= Math.min(b, x) && \n                             my >= y + barLeft && my <= y + barRight) :\n                            (mx >= x + barLeft && mx <= x + barRight &&\n                             my >= Math.min(b, y) && my <= Math.max(b, y)))\n                                item = [i, j / ps];\n                    }\n                }\n            }\n\n            if (item) {\n                i = item[0];\n                j = item[1];\n                ps = series[i].datapoints.pointsize;\n                \n                return { datapoint: series[i].datapoints.points.slice(j * ps, (j + 1) * ps),\n                         dataIndex: j,\n                         series: series[i],\n                         seriesIndex: i };\n            }\n            \n            return null;\n        }\n\n        function onMouseMove(e) {\n            if (options.grid.hoverable)\n                triggerClickHoverEvent(\"plothover\", e,\n                                       function (s) { return s[\"hoverable\"] != false; });\n        }\n\n        function onMouseLeave(e) {\n            if (options.grid.hoverable)\n                triggerClickHoverEvent(\"plothover\", e,\n                                       function (s) { return false; });\n        }\n\n        function onClick(e) {\n            triggerClickHoverEvent(\"plotclick\", e,\n                                   function (s) { return s[\"clickable\"] != false; });\n        }\n\n        // trigger click or hover event (they send the same parameters\n        // so we share their code)\n        function triggerClickHoverEvent(eventname, event, seriesFilter) {\n            var offset = eventHolder.offset(),\n                canvasX = event.pageX - offset.left - plotOffset.left,\n                canvasY = event.pageY - offset.top - plotOffset.top,\n            pos = canvasToAxisCoords({ left: canvasX, top: canvasY });\n\n            pos.pageX = event.pageX;\n            pos.pageY = event.pageY;\n\n            var item = findNearbyItem(canvasX, canvasY, seriesFilter);\n\n            if (item) {\n                // fill in mouse pos for any listeners out there\n                item.pageX = parseInt(item.series.xaxis.p2c(item.datapoint[0]) + offset.left + plotOffset.left);\n                item.pageY = parseInt(item.series.yaxis.p2c(item.datapoint[1]) + offset.top + plotOffset.top);\n            }\n\n            if (options.grid.autoHighlight) {\n                // clear auto-highlights\n                for (var i = 0; i < highlights.length; ++i) {\n                    var h = highlights[i];\n                    if (h.auto == eventname &&\n                        !(item && h.series == item.series &&\n                          h.point[0] == item.datapoint[0] &&\n                          h.point[1] == item.datapoint[1]))\n                        unhighlight(h.series, h.point);\n                }\n                \n                if (item)\n                    highlight(item.series, item.datapoint, eventname);\n            }\n            \n            placeholder.trigger(eventname, [ pos, item ]);\n        }\n\n        function triggerRedrawOverlay() {\n            if (!redrawTimeout)\n                redrawTimeout = setTimeout(drawOverlay, 30);\n        }\n\n        function drawOverlay() {\n            redrawTimeout = null;\n\n            // draw highlights\n            octx.save();\n            octx.clearRect(0, 0, canvasWidth, canvasHeight);\n            octx.translate(plotOffset.left, plotOffset.top);\n            \n            var i, hi;\n            for (i = 0; i < highlights.length; ++i) {\n                hi = highlights[i];\n\n                if (hi.series.bars.show)\n                    drawBarHighlight(hi.series, hi.point);\n                else\n                    drawPointHighlight(hi.series, hi.point);\n            }\n            octx.restore();\n            \n            executeHooks(hooks.drawOverlay, [octx]);\n        }\n        \n        function highlight(s, point, auto) {\n            if (typeof s == \"number\")\n                s = series[s];\n\n            if (typeof point == \"number\") {\n                var ps = s.datapoints.pointsize;\n                point = s.datapoints.points.slice(ps * point, ps * (point + 1));\n            }\n\n            var i = indexOfHighlight(s, point);\n            if (i == -1) {\n                highlights.push({ series: s, point: point, auto: auto });\n\n                triggerRedrawOverlay();\n            }\n            else if (!auto)\n                highlights[i].auto = false;\n        }\n            \n        function unhighlight(s, point) {\n            if (s == null && point == null) {\n                highlights = [];\n                triggerRedrawOverlay();\n            }\n            \n            if (typeof s == \"number\")\n                s = series[s];\n\n            if (typeof point == \"number\")\n                point = s.data[point];\n\n            var i = indexOfHighlight(s, point);\n            if (i != -1) {\n                highlights.splice(i, 1);\n\n                triggerRedrawOverlay();\n            }\n        }\n        \n        function indexOfHighlight(s, p) {\n            for (var i = 0; i < highlights.length; ++i) {\n                var h = highlights[i];\n                if (h.series == s && h.point[0] == p[0]\n                    && h.point[1] == p[1])\n                    return i;\n            }\n            return -1;\n        }\n        \n        function drawPointHighlight(series, point) {\n            var x = point[0], y = point[1],\n                axisx = series.xaxis, axisy = series.yaxis;\n            \n            if (x < axisx.min || x > axisx.max || y < axisy.min || y > axisy.max)\n                return;\n            \n            var pointRadius = series.points.radius + series.points.lineWidth / 2;\n            octx.lineWidth = pointRadius;\n            octx.strokeStyle = $.color.parse(series.color).scale('a', 0.5).toString();\n            var radius = 1.5 * pointRadius,\n                x = axisx.p2c(x),\n                y = axisy.p2c(y);\n            \n            octx.beginPath();\n            if (series.points.symbol == \"circle\")\n                octx.arc(x, y, radius, 0, 2 * Math.PI, false);\n            else\n                series.points.symbol(octx, x, y, radius, false);\n            octx.closePath();\n            octx.stroke();\n        }\n\n        function drawBarHighlight(series, point) {\n            octx.lineWidth = series.bars.lineWidth;\n            octx.strokeStyle = $.color.parse(series.color).scale('a', 0.5).toString();\n            var fillStyle = $.color.parse(series.color).scale('a', 0.5).toString();\n            var barLeft = series.bars.align == \"left\" ? 0 : -series.bars.barWidth/2;\n            drawBar(point[0], point[1], point[2] || 0, barLeft, barLeft + series.bars.barWidth,\n                    0, function () { return fillStyle; }, series.xaxis, series.yaxis, octx, series.bars.horizontal, series.bars.lineWidth);\n        }\n\n        function getColorOrGradient(spec, bottom, top, defaultColor) {\n            if (typeof spec == \"string\")\n                return spec;\n            else {\n                // assume this is a gradient spec; IE currently only\n                // supports a simple vertical gradient properly, so that's\n                // what we support too\n                var gradient = ctx.createLinearGradient(0, top, 0, bottom);\n                \n                for (var i = 0, l = spec.colors.length; i < l; ++i) {\n                    var c = spec.colors[i];\n                    if (typeof c != \"string\") {\n                        var co = $.color.parse(defaultColor);\n                        if (c.brightness != null)\n                            co = co.scale('rgb', c.brightness)\n                        if (c.opacity != null)\n                            co.a *= c.opacity;\n                        c = co.toString();\n                    }\n                    gradient.addColorStop(i / (l - 1), c);\n                }\n                \n                return gradient;\n            }\n        }\n    }\n\n    $.plot = function(placeholder, data, options) {\n        //var t0 = new Date();\n        var plot = new Plot($(placeholder), data, options, $.plot.plugins);\n        //(window.console ? console.log : alert)(\"time used (msecs): \" + ((new Date()).getTime() - t0.getTime()));\n        return plot;\n    };\n\n    $.plot.version = \"0.7\";\n    \n    $.plot.plugins = [];\n\n    // returns a string with the date d formatted according to fmt\n    $.plot.formatDate = function(d, fmt, monthNames) {\n        var leftPad = function(n) {\n            n = \"\" + n;\n            return n.length == 1 ? \"0\" + n : n;\n        };\n        \n        var r = [];\n        var escape = false, padNext = false;\n        var hours = d.getUTCHours();\n        var isAM = hours < 12;\n        if (monthNames == null)\n            monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n        if (fmt.search(/%p|%P/) != -1) {\n            if (hours > 12) {\n                hours = hours - 12;\n            } else if (hours == 0) {\n                hours = 12;\n            }\n        }\n        for (var i = 0; i < fmt.length; ++i) {\n            var c = fmt.charAt(i);\n            \n            if (escape) {\n                switch (c) {\n                case 'h': c = \"\" + hours; break;\n                case 'H': c = leftPad(hours); break;\n                case 'M': c = leftPad(d.getUTCMinutes()); break;\n                case 'S': c = leftPad(d.getUTCSeconds()); break;\n                case 'd': c = \"\" + d.getUTCDate(); break;\n                case 'm': c = \"\" + (d.getUTCMonth() + 1); break;\n                case 'y': c = \"\" + d.getUTCFullYear(); break;\n                case 'b': c = \"\" + monthNames[d.getUTCMonth()]; break;\n                case 'p': c = (isAM) ? (\"\" + \"am\") : (\"\" + \"pm\"); break;\n                case 'P': c = (isAM) ? (\"\" + \"AM\") : (\"\" + \"PM\"); break;\n                case '0': c = \"\"; padNext = true; break;\n                }\n                if (c && padNext) {\n                    c = leftPad(c);\n                    padNext = false;\n                }\n                r.push(c);\n                if (!padNext)\n                    escape = false;\n            }\n            else {\n                if (c == \"%\")\n                    escape = true;\n                else\n                    r.push(c);\n            }\n        }\n        return r.join(\"\");\n    };\n    \n    // round to nearby lower multiple of base\n    function floorInBase(n, base) {\n        return base * Math.floor(n / base);\n    }\n    \n})(jQuery);\n"],"sourceRoot":"/deploy/kevio/kevio/es6"}