{"version":3,"sources":["genv/blog.js"],"names":[],"mappings":";AACA,OAAO,OAAP,GAAiB,UAAS,GAAT,EAAc;;AAE3B,QAAI,OAAY,IAAI,GAAJ,CAAQ,KAAR,CAAhB;AACA,QAAI,OAAY,IAAI,GAAJ,CAAQ,MAAxB;AACA,QAAI,YAAY,IAAI,IAAJ,CAAS,KAAT,CAAe,QAA/B;AACA,QAAI,SAAY,IAAI,GAAJ,CAAQ,KAAxB;AACA,QAAI,WAAY,IAAI,GAAJ,CAAQ,aAAxB;;AAEA;AACA,QAAI,WAAY,UAAU,MAAV,CAAiB,KAAjB,CAAuB,QAAvC;AACA,QAAI,QAAY,UAAU,MAAV,CAAiB,KAAjB,CAAuB,KAAvC;;AAEA;;;;;;AAMA,QAAI,SAAS;;AAET,WAAK,EAAC,MAAM,MAAP,EAAe,UAAU,IAAzB,EAA+B,OAAO,MAAtC,EAFI;AAGT,YAAK,EAAC,MAAM,MAAP,EAAe,SAAS,GAAxB,EAA6B,MAAM,CAAC,GAAD,EAAM,GAAN,CAAnC,EAA+C,OAAO,YAAtD,EAHI;AAIT,YAAK,EAAC,MAAM,IAAP,EAAa,OAAO,YAApB,EAAkC,SAAS,KAAK,GAAhD;AAJI,KAAb;;AAQA;;;;;;AAMA,WAAO,CAAP,CAAS,QAAT,GAAoB,EAAC,OAAO,MAAR,EAApB;;AAEA;;;;;;AAMA,QAAI,iBAAiB,IAAI,OAAJ,CAAY,KAAZ,CAAkB,MAAlB,CAAyB,QAAzB,CAAkC,MAAlC,EAA0C;AAC3D,cAAM,YADqD;AAE3D,iBAAS;AACL,sBAAW,eADN;AAEL,oBAAW,iBAFN;AAGL,qBAAW,CAAC,MAAD,CAHN;AAIL,kBAAW,MAJN;AAKL,qBAAW;AALN;AAFkD,KAA1C,CAArB;;AAWA;AACA,mBAAe,MAAf,CAAsB,MAAtB;;AAEA;AACA,mBAAe,KAAf,CAAqB,EAAC,IAAI,CAAL,EAAQ,GAAG,CAAX,EAArB,EAAoC,EAAC,QAAQ,IAAT,EAApC;;AAEA;;;;;;AAMA,mBAAe,GAAf,CAAmB,MAAnB,EAA2B,UAAU,IAAV,EAAgB;;AAEvC,YAAI,OAAO,IAAX;AACA,aAAK,MAAL,GAAc,KAAK,KAAnB;AACA;AAEH,KAND;;AAQA;;;;;;AAMA,mBAAe,IAAf,CAAoB,MAApB,EAA4B,UAAU,GAAV,EAAe;;AAEvC,YAAI,OAAO,IAAX;AACA,YAAG,KAAK,MAAR,EAAgB,CAAE;AAErB,KALD;;AAOA,WAAO,UAAU,KAAV,CAAgB,YAAhB,EAA8B,cAA9B,CAAP;AAEH,CAtFD","file":"genv/blog.js","sourcesContent":["\nmodule.exports = function(app) {\n\n    var _env      = app.get('env');\n    var _log      = app.lib.logger;\n    var _mongoose = app.core.mongo.mongoose;\n    var _query    = app.lib.query;\n    var _emitter  = app.lib.schemaEmitter;\n\n    // types\n    var ObjectId  = _mongoose.Schema.Types.ObjectId;\n    var Mixed     = _mongoose.Schema.Types.Mixed;\n\n    /**\n     * ----------------------------------------------------------------\n     * Schema\n     * ----------------------------------------------------------------\n     */\n\n    var Schema = {\n\n        n  : {type: String, required: true, alias: 'name'},\n        ie : {type: String, default: 'Y', enum: ['Y', 'N'], alias: 'is_enabled'},\n        ca : {type: Date, alias: 'created_at', default: Date.now}\n    };\n\n\n    /**\n     * ----------------------------------------------------------------\n     * Settings\n     * ----------------------------------------------------------------\n     */\n\n    Schema.n.settings = {label: 'Name'};\n\n    /**\n     * ----------------------------------------------------------------\n     * Load Schema\n     * ----------------------------------------------------------------\n     */\n\n    var CategorySchema = app.libpost.model.loader.mongoose(Schema, {\n        Name: 'Genv_Blogs',\n        Options: {\n            singular : 'Genv Category',\n            plural   : 'Genv Categories',\n            columns  : ['name'],\n            main     : 'name',\n            perpage  : 25\n        }\n    });\n\n    // plugins\n    CategorySchema.plugin(_query);\n\n    // compound index\n    CategorySchema.index({ap: 1, n: 1}, {unique: true});\n\n    /**\n     * ----------------------------------------------------------------\n     * Pre Save Hook\n     * ----------------------------------------------------------------\n     */\n\n    CategorySchema.pre('save', function (next) {\n\n        var self = this;\n        self._isNew = self.isNew;\n        next();\n\n    });\n\n    /**\n     * ----------------------------------------------------------------\n     * Post Save Hook\n     * ----------------------------------------------------------------\n     */\n\n    CategorySchema.post('save', function (doc) {\n\n        var self = this;\n        if(self._isNew) {}\n\n    });\n\n    return _mongoose.model('Genv_Blogs', CategorySchema);\n\n};\n\n\n\n"],"sourceRoot":"/deploy/kevio/kevio/es6"}